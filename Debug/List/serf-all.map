################################################################################
#                                                                              #
#      IAR Universal Linker V6.4.6.89                                          #
#                                                                              #
#           Link time     =  23/Oct/2025  16:28:37                             #
#           Target CPU    =  x51                                               #
#           List file     =  E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\List\serf-all.map                         #
#           Output file 1 =  E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Exe\serf-all.a51                          #
#                            Format: intel-extended                            #
#           Output file 2 =  E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Exe\serf-all.d51                          #
#                            Format: ubrof10                                   #
#                            UBROF version 10.0.6                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  -f C:\Users\zqq666\AppData\Local\Temp\EW6A.tmp    #
#                            (E:\实验室Start\TrajectoryCompression\Serf_Embedd #
#                            ed\Debug\Obj\elias_gamma_codec.r51                #
#                            E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Obj\file_reader.r51                       #
#                            E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Obj\iar_serf_test.r51                     #
#                            E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Obj\input_bit_stream.r51                  #
#                            E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Obj\output_bit_stream.r51                 #
#                            E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Obj\serf_qt_compressor.r51                #
#                            E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Obj\serf_qt_decompressor.r51              #
#                            -o                                                #
#                            E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\Exe\serf-all.d51                          #
#                            -l                                                #
#                            E:\实验室Start\TrajectoryCompression\Serf_Embedde #
#                            d\Debug\List\serf-all.map                         #
#                            -xms -IE:\实验室Start\IAR\8051\LIB\ -f            #
#                            "E:\实验室Start\IAR\8051\config\devices\Texas Ins #
#                            truments\lnk51ew_cc2530F256_banked.xcl"           #
#                            (-D_IDATA0_START=0x00 -D_IDATA0_END=0xFF          #
#                            -D_PDATA0_START=0x1E00 -D_PDATA0_END=0x1EFF       #
#                            -D_IXDATA0_START=0x0001 -D_IXDATA0_END=0x1EFF     #
#                            -D_XDATA0_START=_IXDATA0_START                    #
#                            -D_XDATA0_END=_IXDATA0_END                        #
#                            -D_NEAR_CODE_START=0x0000                         #
#                            -D_FIRST_BANK_ADDR=0x10000 -D?REGISTER_BANK=0x0   #
#                            -D_REGISTER_BANK_START=0x0 -D_BREG_START=0x00     #
#                            -D?VB=0x20 -Z(BIT)BREG=_BREG_START                #
#                            -Z(BIT)BIT_N=0-7F                                 #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG=08-7F -Z(DATA)PSP,XSP=08-7F          #
#                            -Z(DATA)DOVERLAY=08-7F                            #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA0_END   #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA0_END  #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_NEAR_CODE_START-(_CODEBANK_START- #
#                            1)                                                #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_NEAR_CODE_START-(_CODEBANK_S #
#                            TART-1)                                           #
#                            -Z(CODE)BANK_RELAYS,RCODE,DIFUNCT,CODE_C,CODE_N,N #
#                            EAR_CODE=_NEAR_CODE_START-(_CODEBANK_START-1)     #
#                            -P(CODE)BANKED_CODE=_NEAR_CODE_START-(_CODEBANK_S #
#                            TART-1),[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+10000   #
#                            -Z(CODE)CHECKSUM#(_CODEBANK_START-1)              #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA0_START-_PDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)PDATA_N=_PDATA0_START-_PDATA0_END        #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA0_START-_ #
#                            PDATA0_END                                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA0_START-_ #
#                            XDATA0_END                                        #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA0_START-_IXDATA #
#                            0_END                                             #
#                            -P(XDATA)IXDATA_N=_IXDATA0_START-_IXDATA0_END     #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA0_START-_XDATA0_EN #
#                            D                                                 #
#                            -P(XDATA)XDATA_N=_XDATA0_START-_XDATA0_END        #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA0_STAR #
#                            T-_XDATA0_END                                     #
#                            -Z(CONST)XDATA_ROM_C=_XDATA0_START-_XDATA0_END    #
#                            -cx51                                             #
#                            -M(CODE)[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+0x10000 #
#                            =0x8000                                           #
#                            -ww69=i -D_BANK0_START=0x00000                    #
#                            -D_BANK0_END=0x07FFF -D_BANK1_START=0x18000       #
#                            -D_BANK1_END=0x1FFFF -D_BANK2_START=0x28000       #
#                            -D_BANK2_END=0x2FFFF -D_BANK3_START=0x38000       #
#                            -D_BANK3_END=0x3FFFF -D_BANK4_START=0x48000       #
#                            -D_BANK4_END=0x4FFFF -D_BANK5_START=0x58000       #
#                            -D_BANK5_END=0x5FFFF -D_BANK6_START=0x68000       #
#                            -D_BANK6_END=0x6FFFF -D_BANK7_START=0x78000       #
#                            -D_BANK7_END=0x7FFFF                              #
#                            -P(CODE)BANK0=_BANK0_START-_BANK0_END             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)BANK4=_BANK4_START-_BANK4_END             #
#                            -P(CODE)BANK5=_BANK5_START-_BANK5_END             #
#                            -P(CODE)BANK6=_BANK6_START-_BANK6_END             #
#                            -P(CODE)BANK7=_BANK7_START-_BANK7_END             #
#                            -D_FLASH_LOCK_BITS_START=0x7FFF0                  #
#                            -D_FLASH_LOCK_BITS_END=0x7FFFF                    #
#                            -Z(CODE)FLASH_LOCK_BITS=_FLASH_LOCK_BITS_START-_F #
#                            LASH_LOCK_BITS_END                                #
#                            -U(CODE)0x0000=(CODE)_FLASH_LOCK_BITS_START-_FLAS #
#                            H_LOCK_BITS_END)                                  #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8 -D?PBANK=0x93        #
#                            -D?CBANK=0x9F -D?CBANK_MASK=0xFF                  #
#                            -e?BCALL_FF=?BCALL -e?BRET_FF=?BRET               #
#                            -e?BDISPATCH_FF=?BDISPATCH                        #
#                            -D_CODEBANK_START=0x8000 -D_CODEBANK_END=0xFFFF   #
#                            -D_NR_OF_BANKS=0x07                               #
#                            -IE:\实验室Start\IAR\8051\CONFIG\ -rt             #
#                            -Ointel-extended=E:\实验室Start\TrajectoryCompres #
#                            sion\Serf_Embedded\Debug\Exe\serf-all.a51         #
#                            -s __program_start                                #
#                            E:\实验室Start\IAR\8051\LIB\DLIB\dl-pli-blxd-1e16 #
#                            x01n.r51                                          #
#                            -D_IDATA_STACK_SIZE=0x40 -D?ESP=0 -D?ESP_MASK=0   #
#                            -D_EXTENDED_STACK_START=0                         #
#                            -D_EXTENDED_STACK_SIZE=0                          #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x1FF                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                            -D_FAR22_HEAP_SIZE=0xFFF)                         #
#                                                                              #
#                           Copyright (C) 1987-2016 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000065  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __Heap_Handler             = Basic
  __SystemLibrary            = DLib
  __calling_convention       = xdata_reentrant
  __code_model               = banked
  __core                     = plain
  __data_model               = large
  __dlib_file_descriptor     = 0
  __dlib_full_locale_support = 0
  __dptr_size                = 16
  __extended_stack           = disabled
  __location_for_constants   = data
  __number_of_dptrs          = 1
  __register_banks           = *
  __rt_version               = 1

                ****************************************
                *                                      *
                *    AUTOMATIC SYMBOL REDIRECTIONS     *
                *                                      *
                ****************************************

       All references to: _Printf
         were redirected to: _PrintfLargeNoMb
       All references to: _Printf::?relay
         were redirected to: _PrintfLargeNoMb::?relay



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FAR22_HEAP_SIZE        00000FFF 
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000000FF 
           _XDATA_STACK_SIZE       000001FF 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           ?ESP_MASK               00000000 
           ?ESP                    00000000 
           _IDATA_STACK_SIZE       00000040 
           _NR_OF_BANKS            00000007 
           _CODEBANK_END           0000FFFF 
           _CODEBANK_START         00008000 
           ?CBANK_MASK             000000FF 
           ?CBANK                  0000009F        ?RESET_CODE_BANK (CSTARTUP)
                                                   Segment part 0 (?BANKED_CODE_SUPPORT)
           ?PBANK                  00000093 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _FLASH_LOCK_BITS_END    0003FFFF 
           _FLASH_LOCK_BITS_START
                                   0003FFF0 
           _BANK7_END              0003FFFF 
           _BANK7_START            00038000 
           _BANK6_END              00037FFF 
           _BANK6_START            00030000 
           _BANK5_END              0002FFFF 
           _BANK5_START            00028000 
           _BANK4_END              00027FFF 
           _BANK4_START            00020000 
           _BANK3_END              0001FFFF 
           _BANK3_START            00018000 
           _BANK2_END              00017FFF 
           _BANK2_START            00010000 
           _BANK1_END              0000FFFF 
           _BANK1_START            00008000 
           _BANK0_END              00007FFF 
           _BANK0_START            00000000 
           ?VB                     00000020        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   InputBitStream::ReadBit() (input_bit_stream)
           _BREG_START             00000000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _FIRST_BANK_ADDR        00010000 
           _NEAR_CODE_START        00000000 
           _XDATA0_END             00001EFF 
           _XDATA0_START           00000001 
           _IXDATA0_END            00001EFF 
           _IXDATA0_START          00000001 
           _PDATA0_END             00001EFF 
           _PDATA0_START           00001E00 
           _IDATA0_END             000000FF 
           _IDATA0_START           00000000 
    *************************************************************************

  FILE NAME : E:\实验室Start\TrajectoryCompression\Serf_Embedded\Debug\Obj\elias_gamma_codec.r51
  PROGRAM MODULE, NAME : elias_gamma_codec

  SEGMENTS IN THE MODULE
  ======================
XDATA_I
  Relative segment, address: XDATA 000009E7 - 00000A2A (0x44 bytes), align: 0
  Segment part 8.             Intra module refs:   EliasGammaCodec::Encode(long, OutputBitStream *)
                                                   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EliasGammaCodec::kLog2Table
                                   000009E7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A2B - 00000A2E (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   EliasGammaCodec::Encode(long, OutputBitStream *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_11           00000A2B 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A2F - 00000A32 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   EliasGammaCodec::Encode(long, OutputBitStream *)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            00000A2F 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A3D - 00005A50 (0x14 bytes), align: 0
  Segment part 15.            Intra module refs:   __sti__routine()::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           __sti__routine()        00005A3D 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A51 - 00005B33 (0xe3 bytes), align: 0
  Segment part 17.            Intra module refs:   EliasGammaCodec::Encode(long, OutputBitStream *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EliasGammaCodec::Encode(long, OutputBitStream *)
                                   00005A51 
               calls direct
               XSTACK = 00000002 ( 0000001A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005B34 - 00005BC8 (0x95 bytes), align: 0
  Segment part 19.            Intra module refs:   EliasGammaCodec::Decode(InputBitStream *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EliasGammaCodec::Decode(InputBitStream *)
                                   00005B34 
               calls direct
               XSTACK = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005BC9 - 00005BD3 (0xb bytes), align: 0
  Segment part 21.            Intra module refs:   Double::kNan()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Double::kNan()          00005BC9 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000095 - 000000D8 (0x44 bytes), align: 0
  Segment part 9.             Intra module refs:   EliasGammaCodec::kLog2Table
    -------------------------------------------------------------------------
DIFUNCT
  Relative segment, address: CODE 000016CC - 000016CD (0x2 bytes), align: 0
  Segment part 10. ROOT 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000D9 - 000000DC (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_11
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000DD - 000000E0 (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   __Constant_0
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000633 - 00000638 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 10
           LOCAL                   ADDRESS         
           =====                   =======         
           __sti__routine()::?relay
                                   00000633 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000639 - 0000063E (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EliasGammaCodec::Encode(long, OutputBitStream *)::?relay
                                   00000639        SerfQtCompressor::AddValue(float) (serf_qt_compressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000063F - 00000644 (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EliasGammaCodec::Decode(InputBitStream *)::?relay
                                   0000063F        SerfQtDecompressor::NextValue() (serf_qt_decompressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000645 - 0000064A (0x6 bytes), align: 0
  Segment part 22.            Intra module refs:   __sti__routine()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Double::kNan()::?relay
                                   00000645 

    *************************************************************************

  FILE NAME : E:\实验室Start\TrajectoryCompression\Serf_Embedded\Debug\Obj\file_reader.r51
  PROGRAM MODULE, NAME : file_reader

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000200 - 0000083F (0x640 bytes), align: 0
  Segment part 6.             Intra module refs:   file_reader_read_next(file_reader_t *, trajectory_point_t *)
                                                   load_trajectory_data_internal(char const *)
           LOCAL                   ADDRESS         
           =====                   =======         
           trajectory_data         00000200 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000840 - 00000841 (0x2 bytes), align: 0
  Segment part 7.             Intra module refs:   file_reader_init(file_reader_t *, char const *)
                                                   load_trajectory_data_internal(char const *)
           LOCAL                   ADDRESS         
           =====                   =======         
           trajectory_count        00000840 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000842 - 00000842 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   load_trajectory_data_internal(char const *)
           LOCAL                   ADDRESS         
           =====                   =======         
           data_loaded             00000842 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005696 - 0000577B (0xe6 bytes), align: 0
  Segment part 15.            Intra module refs:   load_trajectory_data_internal(char const *)::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           load_trajectory_data_internal(char const *)
                                   00005696 
               XSTACK = 0000000A ( 00000016 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000577C - 000057EA (0x6f bytes), align: 0
  Segment part 17.            Intra module refs:   file_reader_init(file_reader_t *, char const *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_reader_init(file_reader_t *, char const *)
                                   0000577C 
               calls direct
               XSTACK = 00000000 ( 0000000A )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000057EB - 0000585E (0x74 bytes), align: 0
  Segment part 19.            Intra module refs:   file_reader_read_next(file_reader_t *, trajectory_point_t *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_reader_read_next(file_reader_t *, trajectory_point_t *)
                                   000057EB 
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000585F - 00005882 (0x24 bytes), align: 0
  Segment part 23.            Intra module refs:   file_reader_close(file_reader_t *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_reader_close(file_reader_t *)
                                   0000585F 
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005883 - 000058A4 (0x22 bytes), align: 0
  Segment part 25.            Intra module refs:   file_reader_get_total_points(file_reader_t *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_reader_get_total_points(file_reader_t *)
                                   00005883 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A33 - 00000A36 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   load_trajectory_data_internal(char const *)
                                                   test_serf_qt_compression() (iar_serf_test)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_38d1b717     00000A33 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000E1 - 000000E4 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   __Constant_38d1b717
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A37 - 00000A3A (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   load_trajectory_data_internal(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_42200e33     00000A37 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000E5 - 000000E8 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   __Constant_42200e33
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A3B - 00000A3E (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   load_trajectory_data_internal(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_42e89cea     00000A3B 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000E9 - 000000EC (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   __Constant_42e89cea
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000064B - 00000650 (0x6 bytes), align: 0
  Segment part 16.            Intra module refs:   file_reader_init(file_reader_t *, char const *)
           LOCAL                   ADDRESS         
           =====                   =======         
           load_trajectory_data_internal(char const *)::?relay
                                   0000064B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000651 - 00000656 (0x6 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_reader_init(file_reader_t *, char const *)::?relay
                                   00000651        load_test_data(char const *) (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000657 - 0000065C (0x6 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_reader_read_next(file_reader_t *, trajectory_point_t *)::?relay
                                   00000657        load_test_data(char const *) (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000065D - 00000662 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_reader_close(file_reader_t *)::?relay
                                   0000065D        load_test_data(char const *) (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000663 - 00000668 (0x6 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_reader_get_total_points(file_reader_t *)::?relay
                                   00000663        load_test_data(char const *) (iar_serf_test)

    *************************************************************************

  FILE NAME : E:\实验室Start\TrajectoryCompression\Serf_Embedded\Debug\Obj\iar_serf_test.r51
  PROGRAM MODULE, NAME : iar_serf_test

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004751 - 0000475E (0xe bytes), align: 0
  Segment part 59.            Intra module refs:   free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           free                    00004751 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000475F - 0000477B (0x1d bytes), align: 0
  Segment part 61.            Intra module refs:   Array<uint8_t>::~Array()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::~Array()
                                   0000475F 
               calls direct
               XSTACK = 0000007E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000477C - 00004798 (0x1d bytes), align: 0
  Segment part 63.            Intra module refs:   Array<float>::~Array()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::~Array()
                                   0000477C 
               calls direct
               XSTACK = 0000007E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004799 - 000047DA (0x42 bytes), align: 0
  Segment part 65.            Intra module refs:   Array<float>::operator[](uint16_t) const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::operator[](uint16_t) const
                                   00004799 
               XSTACK = 0000007E ( 0000000A )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000843 - 00000846 (0x4 bytes), align: 0
  Segment part 50.            Intra module refs:   Array<float>::operator[](uint16_t) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::operator[](uint16_t) const::error_value
                                   00000843 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000047DB - 000047EE (0x14 bytes), align: 0
  Segment part 67.            Intra module refs:   Array<float>::length() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::length() const
                                   000047DB 
               XSTACK = 0000007E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000047EF - 0000481D (0x2f bytes), align: 0
  Segment part 69.            Intra module refs:   Array<float>::is_valid() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::is_valid() const
                                   000047EF 
               XSTACK = 0000007E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000847 - 000009D6 (0x190 bytes), align: 0
  Segment part 51.            Intra module refs:   load_test_data(char const *)
                                                   test_serf_qt_compression()
           LOCAL                   ADDRESS         
           =====                   =======         
           test_data               00000847 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009D7 - 000009D8 (0x2 bytes), align: 0
  Segment part 52.            Intra module refs:   load_test_data(char const *)
                                                   test_serf_qt_compression()
           LOCAL                   ADDRESS         
           =====                   =======         
           test_data_count         000009D7 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000481E - 000048A8 (0x8b bytes), align: 0
  Segment part 71.            Intra module refs:   load_test_data(char const *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_test_data(char const *)
                                   0000481E 
               calls direct
               XSTACK = 00000000 ( 00000019 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000048A9 - 00004D73 (0x4cb bytes), align: 0
  Segment part 73.            Intra module refs:   test_serf_qt_compression()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           test_serf_qt_compression()
                                   000048A9 
               calls direct
               XSTACK = 00000000 ( 00000082 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004D74 - 00004DA1 (0x2e bytes), align: 0
  Segment part 75.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00004D74        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000ED - 000000FD (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000FE - 0000011D (0x20 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000011E - 0000012D (0x10 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000012E - 00000164 (0x37 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000165 - 0000017E (0x1a bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000017F - 0000019A (0x1c bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000019B - 000001B5 (0x1b bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001B6 - 000001CF (0x1a bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001D0 - 000001E9 (0x1a bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000001EA - 0000020B (0x22 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000020C - 00000224 (0x19 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000225 - 00000249 (0x25 bytes), align: 0
  Segment part 29.            Intra module refs:   Segment part 28
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000024A - 00000260 (0x17 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 30
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000261 - 00000276 (0x16 bytes), align: 0
  Segment part 33.            Intra module refs:   Segment part 32
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000277 - 0000028B (0x15 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000028C - 000002A0 (0x15 bytes), align: 0
  Segment part 37.            Intra module refs:   Segment part 36
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000002A1 - 000002D1 (0x31 bytes), align: 0
  Segment part 39.            Intra module refs:   Segment part 38
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000002D2 - 00000301 (0x30 bytes), align: 0
  Segment part 41.            Intra module refs:   Segment part 40
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000302 - 00000331 (0x30 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 42
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000332 - 00000344 (0x13 bytes), align: 0
  Segment part 45.            Intra module refs:   Segment part 44
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000345 - 0000035B (0x17 bytes), align: 0
  Segment part 47.            Intra module refs:   Segment part 46
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000035C - 00000371 (0x16 bytes), align: 0
  Segment part 49.            Intra module refs:   Segment part 48
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000372 - 00000375 (0x4 bytes), align: 0
  Segment part 56.            Intra module refs:   __Constant_42c80000
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000376 - 00000379 (0x4 bytes), align: 0
  Segment part 58.            Intra module refs:   __Constant_38d1b718
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000669 - 0000066E (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   Array<float>::~Array()
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint32_t>::~Array() (input_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   Array<uint8_t>::~Array()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           free::?relay            00000669 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000066F - 00000674 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::~SerfQtCompressor() (serf_qt_compressor)
                                                   test_serf_qt_compression()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::~Array()::?relay
                                   0000066F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000675 - 0000067A (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   test_serf_qt_compression()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::~Array()::?relay
                                   00000675 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000067B - 00000680 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   test_serf_qt_compression()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::operator[](uint16_t) const::?relay
                                   0000067B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000681 - 00000686 (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   test_serf_qt_compression()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::length() const::?relay
                                   00000681 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000687 - 0000068C (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   test_serf_qt_compression()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::is_valid() const::?relay
                                   00000687 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000068D - 00000692 (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           load_test_data(char const *)::?relay
                                   0000068D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000693 - 00000698 (0x6 bytes), align: 0
  Segment part 74.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           test_serf_qt_compression()::?relay
                                   00000693 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A3F - 00000A4F (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   load_test_data(char const *)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A50 - 00000A6F (0x20 bytes), align: 0
  Segment part 8.             Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A70 - 00000A7F (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000A80 - 00000AB6 (0x37 bytes), align: 0
  Segment part 12.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000AB7 - 00000AD0 (0x1a bytes), align: 0
  Segment part 14.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000AD1 - 00000AEC (0x1c bytes), align: 0
  Segment part 16.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000AED - 00000B07 (0x1b bytes), align: 0
  Segment part 18.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B08 - 00000B21 (0x1a bytes), align: 0
  Segment part 20.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B22 - 00000B3B (0x1a bytes), align: 0
  Segment part 22.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B3C - 00000B5D (0x22 bytes), align: 0
  Segment part 24.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B5E - 00000B76 (0x19 bytes), align: 0
  Segment part 26.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B77 - 00000B9B (0x25 bytes), align: 0
  Segment part 28.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000B9C - 00000BB2 (0x17 bytes), align: 0
  Segment part 30.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BB3 - 00000BC8 (0x16 bytes), align: 0
  Segment part 32.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BC9 - 00000BDD (0x15 bytes), align: 0
  Segment part 34.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BDE - 00000BF2 (0x15 bytes), align: 0
  Segment part 36.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000BF3 - 00000C23 (0x31 bytes), align: 0
  Segment part 38.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C24 - 00000C53 (0x30 bytes), align: 0
  Segment part 40.            Intra module refs:   test_serf_qt_compression()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C54 - 00000C83 (0x30 bytes), align: 0
  Segment part 42.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C84 - 00000C96 (0x13 bytes), align: 0
  Segment part 44.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000C97 - 00000CAD (0x17 bytes), align: 0
  Segment part 46.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CAE - 00000CC3 (0x16 bytes), align: 0
  Segment part 48.            Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CC4 - 00000CC7 (0x4 bytes), align: 0
  Segment part 55.            Intra module refs:   test_serf_qt_compression()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_42c80000     00000CC4 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CC8 - 00000CCB (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   test_serf_qt_compression()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_38d1b718     00000CC8 

    *************************************************************************

  FILE NAME : E:\实验室Start\TrajectoryCompression\Serf_Embedded\Debug\Obj\input_bit_stream.r51
  PROGRAM MODULE, NAME : input_bit_stream

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000009D9 - 000009DC (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   Array<uint32_t>::operator[](uint16_t) const
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::operator[](uint16_t) const::error_value
                                   000009D9 
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003145 - 0000318D (0x49 bytes), align: 0
  Segment part 31.            Intra module refs:   InputBitStream::InputBitStream()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::InputBitStream()
                                   00003145 
               calls direct
               XSTACK = 0000000A ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000318E - 00003236 (0xa9 bytes), align: 0
  Segment part 35.            Intra module refs:   InputBitStream::Peek(uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::Peek(uint32_t)
                                   0000318E 
               XSTACK = 00000014 ( 00000010 )
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003237 - 00003350 (0x11a bytes), align: 0
  Segment part 37.            Intra module refs:   InputBitStream::Forward(uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::Forward(uint32_t)
                                   00003237 
               calls direct
               XSTACK = 00000014 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003351 - 000033D2 (0x82 bytes), align: 0
  Segment part 39.            Intra module refs:   InputBitStream::ReadLong(uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::ReadLong(uint32_t)
                                   00003351 
               calls direct
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000033D3 - 00003418 (0x46 bytes), align: 0
  Segment part 41.            Intra module refs:   InputBitStream::ReadInt(uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::ReadInt(uint32_t)
                                   000033D3 
               calls direct
               XSTACK = 00000004 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003419 - 00003445 (0x2d bytes), align: 0
  Segment part 43.            Intra module refs:   InputBitStream::ReadBit()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::ReadBit()
                                   00003419 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003446 - 00003742 (0x2fd bytes), align: 0
  Segment part 45.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::SetBuffer(Array<uint8_t> const &)
                                   00003446 
               calls direct
               XSTACK = 00000000 ( 00000028 )
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003743 - 00003750 (0xe bytes), align: 0
  Segment part 49.            Intra module refs:   malloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  00003743 
               calls direct
               XSTACK = 0000000E ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003751 - 0000376C (0x1c bytes), align: 0
  Segment part 51.            Intra module refs:   Array<uint32_t>::Array()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::Array()
                                   00003751 
               XSTACK = 00000016 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000376D - 000037EB (0x7f bytes), align: 0
  Segment part 53.            Intra module refs:   Array<uint32_t>::Array(uint16_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::Array(uint16_t)
                                   0000376D 
               calls direct
               XSTACK = 00000024 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000037EC - 000038BC (0xd1 bytes), align: 0
  Segment part 55.            Intra module refs:   Array<uint32_t>::operator=(Array<uint32_t> const &)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::operator=(Array<uint32_t> const &)
                                   000037EC 
               calls direct
               XSTACK = 00000024 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000038BD - 000038D9 (0x1d bytes), align: 0
  Segment part 57.            Intra module refs:   Array<uint32_t>::~Array()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::~Array()
                                   000038BD 
               calls direct
               XSTACK = 00000024 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000038DA - 0000391B (0x42 bytes), align: 0
  Segment part 59.            Intra module refs:   Array<uint32_t>::operator[](uint16_t) const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::operator[](uint16_t) const
                                   000038DA 
               XSTACK = 00000024 ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000391C - 00003931 (0x16 bytes), align: 0
  Segment part 61.            Intra module refs:   Array<uint32_t>::begin() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::begin() const
                                   0000391C 
               XSTACK = 00000018 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003932 - 00003947 (0x16 bytes), align: 0
  Segment part 63.            Intra module refs:   Array<uint8_t>::begin() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::begin() const
                                   00003932 
               XSTACK = 00000024 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003948 - 0000395B (0x14 bytes), align: 0
  Segment part 65.            Intra module refs:   Array<uint32_t>::length() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::length() const
                                   00003948 
               XSTACK = 00000024 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000395C - 0000396F (0x14 bytes), align: 0
  Segment part 67.            Intra module refs:   Array<uint8_t>::length() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::length() const
                                   0000395C 
               XSTACK = 00000024 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003970 - 0000399E (0x2f bytes), align: 0
  Segment part 69.            Intra module refs:   Array<uint32_t>::is_valid() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::is_valid() const
                                   00003970 
               XSTACK = 00000024 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000399F - 000039CD (0x2f bytes), align: 0
  Segment part 71.            Intra module refs:   Array<uint8_t>::is_valid() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::is_valid() const
                                   0000399F 
               XSTACK = 00000024 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000037A - 00000396 (0x1d bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000397 - 000003B3 (0x1d bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003B4 - 000003B7 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __Constant_3e800000
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003B8 - 000003BB (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   __Constant_1
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003BC - 000003BF (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   __Constant_21
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003C0 - 000003C3 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   __Constant_20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003C4 - 000003C7 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   __Constant_4
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000699 - 0000069E (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::InputBitStream()::?relay
                                   00000699        SerfQtDecompressor::SerfQtDecompressor() (serf_qt_decompressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000069F - 000006A4 (0x6 bytes), align: 0
  Segment part 36.            Intra module refs:   InputBitStream::ReadInt(uint32_t)
                                                   InputBitStream::ReadLong(uint32_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::Peek(uint32_t)::?relay
                                   0000069F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006A5 - 000006AA (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   InputBitStream::ReadBit()
                                                   InputBitStream::ReadInt(uint32_t)
                                                   InputBitStream::ReadLong(uint32_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::Forward(uint32_t)::?relay
                                   000006A5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006AB - 000006B0 (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::ReadLong(uint32_t)::?relay
                                   000006AB        SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006B1 - 000006B6 (0x6 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::ReadInt(uint32_t)::?relay
                                   000006B1        EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006B7 - 000006BC (0x6 bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::ReadBit()::?relay
                                   000006B7        EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006BD - 000006C2 (0x6 bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::SetBuffer(Array<uint8_t> const &)::?relay
                                   000006BD        SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006C3 - 000006C8 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<uint32_t>::Array(uint16_t)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc::?relay          000006C3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006C9 - 000006CE (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   InputBitStream::InputBitStream()
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::Array()::?relay
                                   000006C9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006CF - 000006D4 (0x6 bytes), align: 0
  Segment part 54.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::Array(uint16_t)::?relay
                                   000006CF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006D5 - 000006DA (0x6 bytes), align: 0
  Segment part 56.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::operator=(Array<uint32_t> const &)::?relay
                                   000006D5 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006DB - 000006E0 (0x6 bytes), align: 0
  Segment part 58.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
                                                   InputBitStream::~InputBitStream() (serf_qt_decompressor)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::~OutputBitStream() (serf_qt_compressor)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::~Array()::?relay
                                   000006DB 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006E1 - 000006E6 (0x6 bytes), align: 0
  Segment part 60.            Intra module refs:   InputBitStream::Forward(uint32_t)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::operator[](uint16_t) const::?relay
                                   000006E1 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006E7 - 000006EC (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::begin() const::?relay
                                   000006E7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006ED - 000006F2 (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::begin() const::?relay
                                   000006ED 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006F3 - 000006F8 (0x6 bytes), align: 0
  Segment part 66.            Intra module refs:   InputBitStream::Forward(uint32_t)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::length() const::?relay
                                   000006F3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006F9 - 000006FE (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::length() const::?relay
                                   000006F9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000006FF - 00000704 (0x6 bytes), align: 0
  Segment part 70.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint32_t>::is_valid() const::?relay
                                   000006FF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000705 - 0000070A (0x6 bytes), align: 0
  Segment part 72.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::is_valid() const::?relay
                                   00000705 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CCC - 00000CE8 (0x1d bytes), align: 0
  Segment part 6.             Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000CE9 - 00000D05 (0x1d bytes), align: 0
  Segment part 8.             Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D06 - 00000D09 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e800000     00000D06 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D0A - 00000D0D (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   InputBitStream::Forward(uint32_t)
                                                   InputBitStream::ReadBit()
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ceilf (?ceilf)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            00000D0A 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D0E - 00000D11 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   InputBitStream::Peek(uint32_t)
                                                   InputBitStream::ReadLong(uint32_t)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_21           00000D0E 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D12 - 00000D15 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   InputBitStream::Forward(uint32_t)
                                                   InputBitStream::Peek(uint32_t)
                                                   InputBitStream::ReadLong(uint32_t)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_20           00000D12 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D16 - 00000D19 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   InputBitStream::SetBuffer(Array<uint8_t> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_4            00000D16 

    *************************************************************************

  FILE NAME : E:\实验室Start\TrajectoryCompression\Serf_Embedded\Debug\Obj\output_bit_stream.r51
  PROGRAM MODULE, NAME : output_bit_stream

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000039CE - 000039FD (0x30 bytes), align: 0
  Segment part 23.            Intra module refs:   OutputBitStream::new OutputBitStream(uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::new OutputBitStream(uint32_t)
                                   000039CE 
               calls direct
               XSTACK = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000039FE - 00003A82 (0x85 bytes), align: 0
  Segment part 25.            Intra module refs:   OutputBitStream::OutputBitStream(uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::OutputBitStream(uint32_t)
                                   000039FE 
               calls direct
               XSTACK = 00000012 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003A83 - 00003C5B (0x1d9 bytes), align: 0
  Segment part 27.            Intra module refs:   OutputBitStream::Write(uint32_t, uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::Write(uint32_t, uint32_t)
                                   00003A83 
               calls direct
               XSTACK = 0000001C ( 0000001A )
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003C5C - 00003D5A (0xff bytes), align: 0
  Segment part 29.            Intra module refs:   OutputBitStream::WriteLong(uint32_t, uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::WriteLong(uint32_t, uint32_t)
                                   00003C5C 
               calls direct
               XSTACK = 00000008 ( 0000001C )
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003D5B - 00003D7D (0x23 bytes), align: 0
  Segment part 31.            Intra module refs:   OutputBitStream::WriteInt(uint32_t, uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::WriteInt(uint32_t, uint32_t)
                                   00003D5B 
               calls direct
               XSTACK = 00000008 ( 00000008 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003D7E - 00003F0C (0x18f bytes), align: 0
  Segment part 35.            Intra module refs:   OutputBitStream::GetBuffer(uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::GetBuffer(uint32_t)
                                   00003D7E 
               calls direct
               XSTACK = 00000004 ( 00000024 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003F0D - 00003FA1 (0x95 bytes), align: 0
  Segment part 37.            Intra module refs:   OutputBitStream::Flush()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::Flush()
                                   00003F0D 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003FA2 - 00003FE0 (0x3f bytes), align: 0
  Segment part 39.            Intra module refs:   OutputBitStream::Refresh()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::Refresh()
                                   00003FA2 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003FE1 - 00004052 (0x72 bytes), align: 0
  Segment part 49.            Intra module refs:   Array<uint8_t>::Array(uint16_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::Array(uint16_t)
                                   00003FE1 
               calls direct
               XSTACK = 0000001C ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004053 - 000040D8 (0x86 bytes), align: 0
  Segment part 51.            Intra module refs:   Array<uint8_t>::Array(Array<uint8_t> const &)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::Array(Array<uint8_t> const &)
                                   00004053 
               calls direct
               XSTACK = 0000001C ( 0000000E )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003C8 - 000003F9 (0x32 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000003FA - 00000423 (0x2a bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000424 - 00000454 (0x31 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000455 - 00000458 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   __Constant_ffffffe0
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000459 - 0000045C (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   __Constant_200
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000070B - 00000710 (0x6 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::new OutputBitStream(uint32_t)::?relay
                                   0000070B        SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000711 - 00000716 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   OutputBitStream::new OutputBitStream(uint32_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::OutputBitStream(uint32_t)::?relay
                                   00000711 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000717 - 0000071C (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   OutputBitStream::WriteInt(uint32_t, uint32_t)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::Write(uint32_t, uint32_t)::?relay
                                   00000717 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000071D - 00000722 (0x6 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::WriteLong(uint32_t, uint32_t)::?relay
                                   0000071D        SerfQtCompressor::AddValue(float) (serf_qt_compressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000723 - 00000728 (0x6 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::WriteInt(uint32_t, uint32_t)::?relay
                                   00000723        EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000729 - 0000072E (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::GetBuffer(uint32_t)::?relay
                                   00000729        SerfQtCompressor::Close() (serf_qt_compressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000072F - 00000734 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::Flush()::?relay
                                   0000072F        SerfQtCompressor::Close() (serf_qt_compressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000735 - 0000073A (0x6 bytes), align: 0
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::Refresh()::?relay
                                   00000735        SerfQtCompressor::Close() (serf_qt_compressor)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000073B - 00000740 (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   OutputBitStream::GetBuffer(uint32_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::Array(uint16_t)::?relay
                                   0000073B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000741 - 00000746 (0x6 bytes), align: 0
  Segment part 52.            Intra module refs:   OutputBitStream::GetBuffer(uint32_t)
                                                   SerfQtCompressor::compressed_bytes() (serf_qt_compressor)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::Array(Array<uint8_t> const &)::?relay
                                   00000741 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D1A - 00000D4B (0x32 bytes), align: 0
  Segment part 6.             Intra module refs:   OutputBitStream::GetBuffer(uint32_t)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D4C - 00000D75 (0x2a bytes), align: 0
  Segment part 8.             Intra module refs:   OutputBitStream::GetBuffer(uint32_t)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000D76 - 00000DA6 (0x31 bytes), align: 0
  Segment part 10.            Intra module refs:   OutputBitStream::GetBuffer(uint32_t)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DA7 - 00000DAA (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   OutputBitStream::Write(uint32_t, uint32_t)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffe0     00000DA7 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DAB - 00000DAE (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   OutputBitStream::GetBuffer(uint32_t)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_200          00000DAB 

    *************************************************************************

  FILE NAME : E:\实验室Start\TrajectoryCompression\Serf_Embedded\Debug\Obj\serf_qt_compressor.r51
  PROGRAM MODULE, NAME : serf_qt_compressor

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040D9 - 000040F4 (0x1c bytes), align: 0
  Segment part 28.            Intra module refs:   OutputBitStream::delete ~OutputBitStream(OutputBitStream *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::delete ~OutputBitStream(OutputBitStream *)
                                   000040D9 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000040F5 - 00004210 (0x11c bytes), align: 0
  Segment part 34.            Intra module refs:   SerfQtCompressor::SerfQtCompressor(uint16_t, float)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::SerfQtCompressor(uint16_t, float)
                                   000040F5 
               calls direct
               XSTACK = 0000000E ( 00000012 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004211 - 0000440A (0x1fa bytes), align: 0
  Segment part 36.            Intra module refs:   SerfQtCompressor::AddValue(float)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::AddValue(float)
                                   00004211 
               calls direct
               XSTACK = 00000004 ( 0000001C )
               ISTACK = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000440B - 00004427 (0x1d bytes), align: 0
  Segment part 38.            Intra module refs:   SerfQtCompressor::compressed_bytes()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::compressed_bytes()
                                   0000440B 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004428 - 000045ED (0x1c6 bytes), align: 0
  Segment part 40.            Intra module refs:   SerfQtCompressor::Close()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::Close()
                                   00004428 
               calls direct
               XSTACK = 00000000 ( 00000022 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000045EE - 00004604 (0x17 bytes), align: 0
  Segment part 42.            Intra module refs:   SerfQtCompressor::get_compressed_size_in_bits() const::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::get_compressed_size_in_bits() const
                                   000045EE 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004605 - 00004633 (0x2f bytes), align: 0
  Segment part 44.            Intra module refs:   SerfQtCompressor::~SerfQtCompressor()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::~SerfQtCompressor()
                                   00004605 
               calls direct
               XSTACK = 00000009 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004634 - 0000464F (0x1c bytes), align: 0
  Segment part 50.            Intra module refs:   Array<uint8_t>::Array()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::Array()
                                   00004634 
               XSTACK = 00000012 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004650 - 00004701 (0xb2 bytes), align: 0
  Segment part 54.            Intra module refs:   Array<uint8_t>::operator=(Array<uint8_t> const &)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::operator=(Array<uint8_t> const &)
                                   00004650 
               calls direct
               XSTACK = 0000001A ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004702 - 0000470F (0xe bytes), align: 0
  Segment part 64.            Intra module refs:   OutputBitStream::~OutputBitStream()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::~OutputBitStream()
                                   00004702 
               calls direct
               XSTACK = 00000009 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004710 - 00004719 (0xa bytes), align: 0
  Segment part 66.            Intra module refs:   Double::FloatToLongBits(float)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Double::FloatToLongBits(float)
                                   00004710 
               XSTACK = 00000014 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000471A - 00004750 (0x37 bytes), align: 0
  Segment part 68.            Intra module refs:   ZigZagCodec::Encode(long)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZigZagCodec::Encode(long)
                                   0000471A 
               XSTACK = 00000014 ( 00000010 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000045D - 00000480 (0x24 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000481 - 000004B4 (0x34 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000004B5 - 000004E2 (0x2e bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000004E3 - 000004E6 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000004E7 - 000004E9 (0x3 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000004EA - 000004ED (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   __Constant_3f7fbe77
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000004EE - 000004F1 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   __Constant_10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000004F2 - 000004F5 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_40000000
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000004F6 - 000004F9 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   __Constant_3e000000
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000747 - 0000074C (0x6 bytes), align: 0
  Segment part 29.            Intra module refs:   SerfQtCompressor::~SerfQtCompressor()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::delete ~OutputBitStream(OutputBitStream *)::?relay
                                   00000747 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000074D - 00000752 (0x6 bytes), align: 0
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::SerfQtCompressor(uint16_t, float)::?relay
                                   0000074D        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000753 - 00000758 (0x6 bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::AddValue(float)::?relay
                                   00000753        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000759 - 0000075E (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::compressed_bytes()::?relay
                                   00000759        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000075F - 00000764 (0x6 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::Close()::?relay
                                   0000075F        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000765 - 0000076A (0x6 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::get_compressed_size_in_bits() const::?relay
                                   00000765        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000076B - 00000770 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtCompressor::~SerfQtCompressor()::?relay
                                   0000076B        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000771 - 00000776 (0x6 bytes), align: 0
  Segment part 51.            Intra module refs:   SerfQtCompressor::SerfQtCompressor(uint16_t, float)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::Array()::?relay
                                   00000771 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000777 - 0000077C (0x6 bytes), align: 0
  Segment part 55.            Intra module refs:   SerfQtCompressor::Close()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<uint8_t>::operator=(Array<uint8_t> const &)::?relay
                                   00000777 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000077D - 00000782 (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   OutputBitStream::delete ~OutputBitStream(OutputBitStream *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OutputBitStream::~OutputBitStream()::?relay
                                   0000077D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000783 - 00000788 (0x6 bytes), align: 0
  Segment part 67.            Intra module refs:   SerfQtCompressor::AddValue(float)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Double::FloatToLongBits(float)::?relay
                                   00000783 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000789 - 0000078E (0x6 bytes), align: 0
  Segment part 69.            Intra module refs:   SerfQtCompressor::AddValue(float)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZigZagCodec::Encode(long)::?relay
                                   00000789 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DAF - 00000DD2 (0x24 bytes), align: 0
  Segment part 6.             Intra module refs:   SerfQtCompressor::AddValue(float)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000DD3 - 00000E06 (0x34 bytes), align: 0
  Segment part 8.             Intra module refs:   SerfQtCompressor::Close()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E07 - 00000E34 (0x2e bytes), align: 0
  Segment part 10.            Intra module refs:   SerfQtCompressor::Close()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E35 - 00000E38 (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   SerfQtCompressor::Close()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E39 - 00000E3B (0x3 bytes), align: 0
  Segment part 14.            Intra module refs:   SerfQtCompressor::Close()
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E3C - 00000E3F (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   SerfQtCompressor::SerfQtCompressor(uint16_t, float)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3f7fbe77     00000E3C 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E40 - 00000E43 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   SerfQtCompressor::AddValue(float)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_10           00000E40 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E44 - 00000E47 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   SerfQtCompressor::AddValue(float)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   __iar_Log (?xlog)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_40000000     00000E44 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E48 - 00000E4B (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   SerfQtCompressor::Close()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e000000     00000E48 

    *************************************************************************

  FILE NAME : E:\实验室Start\TrajectoryCompression\Serf_Embedded\Debug\Obj\serf_qt_decompressor.r51
  PROGRAM MODULE, NAME : serf_qt_decompressor

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004DA2 - 00004DBD (0x1c bytes), align: 0
  Segment part 27.            Intra module refs:   InputBitStream::delete ~InputBitStream(InputBitStream *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::delete ~InputBitStream(InputBitStream *)
                                   00004DA2 
               calls direct
               XSTACK = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004DBE - 00004E24 (0x67 bytes), align: 0
  Segment part 33.            Intra module refs:   SerfQtDecompressor::SerfQtDecompressor()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtDecompressor::SerfQtDecompressor()
                                   00004DBE 
               calls direct
               XSTACK = 0000000A ( 0000000A )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E25 - 00004E45 (0x21 bytes), align: 0
  Segment part 35.            Intra module refs:   SerfQtDecompressor::~SerfQtDecompressor()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtDecompressor::~SerfQtDecompressor()
                                   00004E25 
               calls direct
               XSTACK = 00000009 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00004E46 - 0000502C (0x1e7 bytes), align: 0
  Segment part 37.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtDecompressor::Decompress(Array<uint8_t> const &)
                                   00004E46 
               calls direct
               XSTACK = 00000002 ( 0000001E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000502D - 000050DB (0xaf bytes), align: 0
  Segment part 39.            Intra module refs:   SerfQtDecompressor::NextValue()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtDecompressor::NextValue()
                                   0000502D 
               calls direct
               XSTACK = 00000016 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000050DC - 000050E5 (0xa bytes), align: 0
  Segment part 41.            Intra module refs:   Double::LongBitsToFloat(uint32_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Double::LongBitsToFloat(uint32_t)
                                   000050DC 
               XSTACK = 00000016 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000050E6 - 00005164 (0x7f bytes), align: 0
  Segment part 47.            Intra module refs:   Array<float>::Array(uint16_t)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::Array(uint16_t)
                                   000050E6 
               calls direct
               XSTACK = 00000016 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005165 - 0000520B (0xa7 bytes), align: 0
  Segment part 49.            Intra module refs:   Array<float>::Array(Array<float> const &)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::Array(Array<float> const &)
                                   00005165 
               calls direct
               XSTACK = 00000016 ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000520C - 00005219 (0xe bytes), align: 0
  Segment part 61.            Intra module refs:   InputBitStream::~InputBitStream()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::~InputBitStream()
                                   0000520C 
               calls direct
               XSTACK = 00000009 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000521A - 00005256 (0x3d bytes), align: 0
  Segment part 63.            Intra module refs:   ZigZagCodec::Decode(long)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZigZagCodec::Decode(long)
                                   0000521A 
               XSTACK = 00000014 ( 00000010 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000004FA - 00000517 (0x1e bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000518 - 0000053F (0x28 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000540 - 00000568 (0x29 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000569 - 00000591 (0x29 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000592 - 000005C5 (0x34 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005C6 - 000005C9 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   __Constant_ffffffff
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000078F - 00000794 (0x6 bytes), align: 0
  Segment part 28.            Intra module refs:   SerfQtDecompressor::~SerfQtDecompressor()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::delete ~InputBitStream(InputBitStream *)::?relay
                                   0000078F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000795 - 0000079A (0x6 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtDecompressor::SerfQtDecompressor()::?relay
                                   00000795        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000079B - 000007A0 (0x6 bytes), align: 0
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtDecompressor::~SerfQtDecompressor()::?relay
                                   0000079B        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007A1 - 000007A6 (0x6 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtDecompressor::Decompress(Array<uint8_t> const &)::?relay
                                   000007A1        test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007A7 - 000007AC (0x6 bytes), align: 0
  Segment part 40.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SerfQtDecompressor::NextValue()::?relay
                                   000007A7 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007AD - 000007B2 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Double::LongBitsToFloat(uint32_t)::?relay
                                   000007AD 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007B3 - 000007B8 (0x6 bytes), align: 0
  Segment part 48.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::Array(uint16_t)::?relay
                                   000007B3 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007B9 - 000007BE (0x6 bytes), align: 0
  Segment part 50.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Array<float>::Array(Array<float> const &)::?relay
                                   000007B9 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007BF - 000007C4 (0x6 bytes), align: 0
  Segment part 62.            Intra module refs:   InputBitStream::delete ~InputBitStream(InputBitStream *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InputBitStream::~InputBitStream()::?relay
                                   000007BF 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007C5 - 000007CA (0x6 bytes), align: 0
  Segment part 64.            Intra module refs:   SerfQtDecompressor::NextValue()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ZigZagCodec::Decode(long)::?relay
                                   000007C5 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E4C - 00000E69 (0x1e bytes), align: 0
  Segment part 6.             Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E6A - 00000E91 (0x28 bytes), align: 0
  Segment part 8.             Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000E92 - 00000EBA (0x29 bytes), align: 0
  Segment part 10.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000EBB - 00000EE3 (0x29 bytes), align: 0
  Segment part 12.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000EE4 - 00000F17 (0x34 bytes), align: 0
  Segment part 14.            Intra module refs:   SerfQtDecompressor::Decompress(Array<uint8_t> const &)
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F18 - 00000F1B (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   SerfQtDecompressor::NextValue()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     00000F18 

    *************************************************************************

  FILE NAME : E:\实验室Start\IAR\8051\LIB\DLIB\dl-pli-blxd-1e16x01n.r51
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063E2 - 000063FC (0x1b bytes), align: 0
  Segment part 6.             Intra module refs:   abort::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   000063E2 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007CB - 000007D0 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort::?relay           000007CB        _Nomemory() (?nomemory)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dbg_break

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006441 - 00006443 (0x3 bytes), align: 0
  Segment part 6.             Intra module refs:   __DebugBreak::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak            00006441 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007D1 - 000007D6 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __DebugBreak::?relay    000007D1        __dwrite (?__dwrite)
                                                   __exit (?__exit)
                                                   abort (?abort)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__dwrite

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006160 - 000061B0 (0x51 bytes), align: 0
  Segment part 6.             Intra module refs:   __dwrite::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __dwrite                00006160 
               calls direct
               XSTACK = 00000002 ( 00000008 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007D7 - 000007DC (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __dwrite::?relay        000007D7        __write (?__write)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006383 - 000063A6 (0x24 bytes), align: 0
  Segment part 6.             Intra module refs:   __exit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  00006383        Segment part 10 (?cexit)
               calls direct
               XSTACK = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007DD - 000007E2 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit::?relay          000007DD        abort (?abort)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__write

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006338 - 0000635D (0x26 bytes), align: 0
  Segment part 6.             Intra module refs:   __write::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __write                 00006338 
               calls direct
               XSTACK = 00000002 ( 00000002 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007E3 - 000007E8 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __write::?relay         000007E3        putchar (?putchar)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ceilf

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005F29 - 00005FA5 (0x7d bytes), align: 0
  Segment part 10.            Intra module refs:   ceilf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ceilf                   00005F29 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F1C - 00000F1F (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   ceilf
                                                   roundf (?roundf)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3f800000     00000F1C 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005CA - 000005CD (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   __Constant_3f800000
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007E9 - 000007EE (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ceilf::?relay           000007E9        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000003, align: 0
  Segment part 5.             Intra module refs:   _exit::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   00000003 
               calls direct
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000003 - 0000000D (0xb bytes), align: 0
  Segment part 10.            Intra module refs:   _exit
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007EF - 000007F4 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit::?relay           000007EF        exit (?exit)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000000E, align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  0000000E        Segment part 13 (CSTARTUP)
               calls direct
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000000E - 0000001D (0x10 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          0000000E        Array<float>::operator[](uint16_t) const::error_value (iar_serf_test)
                                                   Array<uint32_t>::operator[](uint16_t) const::error_value (input_bit_stream)
                                                   Segment part 6 (?xgetmemchunk)
                                                   __iar_Errno (?errno)
                                                   __iar_New_hand (?new)
                                                   __xdata_Aldata (?xxmemxmalloc)
                                                   data_loaded (file_reader)
                                                   test_data (iar_serf_test)
                                                   test_data_count (iar_serf_test)
                                                   trajectory_count (file_reader)
                                                   trajectory_data (file_reader)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000001E - 00000043 (0x26 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          0000001E        EliasGammaCodec::kLog2Table (elias_gamma_codec)
                                                   Segment part 10 (?xprintflarge_nomb)
                                                   Segment part 10 (iar_serf_test)
                                                   Segment part 10 (output_bit_stream)
                                                   Segment part 10 (serf_qt_compressor)
                                                   Segment part 10 (serf_qt_decompressor)
                                                   Segment part 12 (?xprintflarge_nomb)
                                                   Segment part 12 (iar_serf_test)
                                                   Segment part 12 (serf_qt_compressor)
                                                   Segment part 12 (serf_qt_decompressor)
                                                   Segment part 14 (?xprintflarge_nomb)
                                                   Segment part 14 (iar_serf_test)
                                                   Segment part 14 (serf_qt_compressor)
                                                   Segment part 14 (serf_qt_decompressor)
                                                   Segment part 16 (?xprintflarge_nomb)
                                                   Segment part 16 (iar_serf_test)
                                                   Segment part 18 (iar_serf_test)
                                                   Segment part 20 (iar_serf_test)
                                                   Segment part 22 (iar_serf_test)
                                                   Segment part 24 (iar_serf_test)
                                                   Segment part 26 (iar_serf_test)
                                                   Segment part 28 (iar_serf_test)
                                                   Segment part 30 (iar_serf_test)
                                                   Segment part 32 (iar_serf_test)
                                                   Segment part 34 (iar_serf_test)
                                                   Segment part 36 (iar_serf_test)
                                                   Segment part 38 (iar_serf_test)
                                                   Segment part 40 (iar_serf_test)
                                                   Segment part 42 (iar_serf_test)
                                                   Segment part 44 (iar_serf_test)
                                                   Segment part 46 (iar_serf_test)
                                                   Segment part 48 (iar_serf_test)
                                                   Segment part 6 (?xprintflarge_nomb)
                                                   Segment part 6 (iar_serf_test)
                                                   Segment part 6 (input_bit_stream)
                                                   Segment part 6 (output_bit_stream)
                                                   Segment part 6 (serf_qt_compressor)
                                                   Segment part 6 (serf_qt_decompressor)
                                                   Segment part 8 (?xprintflarge_nomb)
                                                   Segment part 8 (iar_serf_test)
                                                   Segment part 8 (input_bit_stream)
                                                   Segment part 8 (output_bit_stream)
                                                   Segment part 8 (serf_qt_compressor)
                                                   Segment part 8 (serf_qt_decompressor)
                                                   __Constant_0 (elias_gamma_codec)
                                                   __Constant_1 (input_bit_stream)
                                                   __Constant_10 (serf_qt_compressor)
                                                   __Constant_11 (elias_gamma_codec)
                                                   __Constant_186a0 (?xprintflarge_nomb)
                                                   __Constant_20 (input_bit_stream)
                                                   __Constant_200 (output_bit_stream)
                                                   __Constant_21 (input_bit_stream)
                                                   __Constant_32a57060 (?xlog)
                                                   __Constant_32a93728 (?xlog)
                                                   __Constant_33a13ef4 (?xlog)
                                                   __Constant_33fbe8e8 (?xlog)
                                                   __Constant_38d1b717 (file_reader)
                                                   __Constant_38d1b718 (iar_serf_test)
                                                   __Constant_3e000000 (serf_qt_compressor)
                                                   __Constant_3e800000 (input_bit_stream)
                                                   __Constant_3e990215 (?xlog)
                                                   __Constant_3e9a2098 (?xlog)
                                                   __Constant_3eccae11 (?xlog)
                                                   __Constant_3ede5bd8 (?xlog)
                                                   __Constant_3ede5bd9 (?xlog)
                                                   __Constant_3f2aaac0 (?xlog)
                                                   __Constant_3f317216 (?xlog)
                                                   __Constant_3f3504f3 (?xlog)
                                                   __Constant_3f7fbe77 (serf_qt_compressor)
                                                   __Constant_3f800000 (?ceilf)
                                                   __Constant_3fb8aa3b (?xlog)
                                                   __Constant_4 (input_bit_stream)
                                                   __Constant_40000000 (serf_qt_compressor)
                                                   __Constant_42200e33 (file_reader)
                                                   __Constant_42c80000 (iar_serf_test)
                                                   __Constant_42e89cea (file_reader)
                                                   __Constant_4cbebc20 (?xprintflarge_nomb)
                                                   __Constant_7597 (?xprintflarge_nomb)
                                                   __Constant_a (?xprintflarge_nomb)
                                                   __Constant_bf800000 (?floorf)
                                                   __Constant_ffff (?xprintflarge_nomb)
                                                   __Constant_ffffffe0 (output_bit_stream)
                                                   __Constant_ffffffff (serf_qt_decompressor)
    -------------------------------------------------------------------------
DIFUNCT
  Relative segment, address: CODE 000016CE, align: 0
  Segment part 38. ROOT 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000044 - 0000004E (0xb bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      00000044        Segment part 10 (elias_gamma_codec)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000004F - 00000064 (0x16 bytes), align: 0
  Segment part 40.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              0000004F 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cppinit

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000601F - 00006092 (0x74 bytes), align: 0
  Segment part 7.             Intra module refs:   __call_ctors::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            0000601F 
               XSTACK = 00000000 ( 0000000D )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007F5 - 000007FA (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors::?relay    000007F5        __cstart_call_ctors (?cstart_call_ctors)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart_call_ctors

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063FD - 00006412 (0x16 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_ctors     000063FD        ?cstart_call_ctors (?cmain)
               calls direct
               ISTACK = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 000000C0, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           000000C0 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000001, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000001 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT        Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000065 - 0000006A (0x6 bytes), align: 0
  Segment part 6. ROOT        Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000065        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               00000068 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000006B - 00000070 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              0000006B        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000071 - 00000073 (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_CODE_BANK        00000071        Absolute parts (?BANKED_CODE_SUPPORT)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000074 - 00000076 (0x3 bytes), align: 0
  Segment part 13.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008 - 00000008 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   ?V1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?R2345_FLT_TO_L (?FLT_TO_L)
                                                   ?R2345_FLT_TO_UL (?FLT_TO_L)
                                                   ?SL_GE_X (?SL_GE_X)
                                                   ?UL_GE_X (?UL_GE_X)
                                                   Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<float>::operator[](uint16_t) const (iar_serf_test)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint32_t>::operator[](uint16_t) const (input_bit_stream)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   Double::FloatToLongBits(float) (serf_qt_compressor)
                                                   Double::LongBitsToFloat(uint32_t) (serf_qt_decompressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   Segment part 116 (?xprintflarge_nomb)
                                                   Segment part 117 (?xprintflarge_nomb)
                                                   Segment part 118 (?xprintflarge_nomb)
                                                   Segment part 120 (?xprintflarge_nomb)
                                                   Segment part 145 (?xprintflarge_nomb)
                                                   Segment part 146 (?xprintflarge_nomb)
                                                   Segment part 157 (?xprintflarge_nomb)
                                                   Segment part 39 (?xprintflarge_nomb)
                                                   Segment part 51 (?xprintflarge_nomb)
                                                   Segment part 55 (?xprintflarge_nomb)
                                                   Segment part 74 (?xprintflarge_nomb)
                                                   Segment part 87 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   SerfQtDecompressor::SerfQtDecompressor() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   _Prout (?xprout)
                                                   _PutcharLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __call_ctors (?cppinit)
                                                   __iar_Dint (?xdint)
                                                   __iar_Log (?xlog)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   div (?div)
                                                   fabsf (?fabsf)
                                                   file_reader_init(file_reader_t *, char const *) (file_reader)
                                                   file_reader_read_next(file_reader_t *, trajectory_point_t *) (file_reader)
                                                   floorf (?floorf)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   memcpy (?memcpy)
                                                   operator new(unsigned int) (?newop_0)
                                                   pad (?xprintflarge_nomb)
                                                   printf (?printf)
                                                   putchar (?putchar)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000009 - 00000009 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   ?V2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V1                     00000009        ?R2345_FLT_TO_L (?FLT_TO_L)
                                                   ?R2345_FLT_TO_UL (?FLT_TO_L)
                                                   Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<float>::operator[](uint16_t) const (iar_serf_test)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint32_t>::operator[](uint16_t) const (input_bit_stream)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   Double::FloatToLongBits(float) (serf_qt_compressor)
                                                   Double::LongBitsToFloat(uint32_t) (serf_qt_decompressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   Segment part 117 (?xprintflarge_nomb)
                                                   Segment part 118 (?xprintflarge_nomb)
                                                   Segment part 119 (?xprintflarge_nomb)
                                                   Segment part 121 (?xprintflarge_nomb)
                                                   Segment part 145 (?xprintflarge_nomb)
                                                   Segment part 146 (?xprintflarge_nomb)
                                                   Segment part 157 (?xprintflarge_nomb)
                                                   Segment part 44 (?xprintflarge_nomb)
                                                   Segment part 54 (?xprintflarge_nomb)
                                                   Segment part 74 (?xprintflarge_nomb)
                                                   Segment part 86 (?xprintflarge_nomb)
                                                   Segment part 88 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   SerfQtDecompressor::SerfQtDecompressor() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   _Prout (?xprout)
                                                   _PutcharLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __call_ctors (?cppinit)
                                                   __iar_Dint (?xdint)
                                                   __iar_Log (?xlog)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   div (?div)
                                                   fabsf (?fabsf)
                                                   file_reader_init(file_reader_t *, char const *) (file_reader)
                                                   file_reader_read_next(file_reader_t *, trajectory_point_t *) (file_reader)
                                                   floorf (?floorf)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   operator new(unsigned int) (?newop_0)
                                                   pad (?xprintflarge_nomb)
                                                   printf (?printf)
                                                   putchar (?putchar)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000A - 0000000A (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   ?V3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V2                     0000000A        ?R2345_FLT_TO_L (?FLT_TO_L)
                                                   ?R2345_FLT_TO_UL (?FLT_TO_L)
                                                   Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   Double::FloatToLongBits(float) (serf_qt_compressor)
                                                   Double::LongBitsToFloat(uint32_t) (serf_qt_decompressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   Segment part 118 (?xprintflarge_nomb)
                                                   Segment part 120 (?xprintflarge_nomb)
                                                   Segment part 146 (?xprintflarge_nomb)
                                                   Segment part 152 (?xprintflarge_nomb)
                                                   Segment part 74 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   _Prout (?xprout)
                                                   _PutcharLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __call_ctors (?cppinit)
                                                   __iar_Dint (?xdint)
                                                   __iar_Log (?xlog)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   pad (?xprintflarge_nomb)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000B - 0000000B (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?V4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V3                     0000000B        ?R2345_FLT_TO_L (?FLT_TO_L)
                                                   ?R2345_FLT_TO_UL (?FLT_TO_L)
                                                   Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   Double::FloatToLongBits(float) (serf_qt_compressor)
                                                   Double::LongBitsToFloat(uint32_t) (serf_qt_decompressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   Segment part 118 (?xprintflarge_nomb)
                                                   Segment part 120 (?xprintflarge_nomb)
                                                   Segment part 146 (?xprintflarge_nomb)
                                                   Segment part 152 (?xprintflarge_nomb)
                                                   Segment part 74 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __call_ctors (?cppinit)
                                                   __iar_Dint (?xdint)
                                                   __iar_Log (?xlog)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   pad (?xprintflarge_nomb)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000C - 0000000C (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   ?V5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V4                     0000000C        Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   Segment part 141 (?xprintflarge_nomb)
                                                   Segment part 142 (?xprintflarge_nomb)
                                                   Segment part 74 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   _Prout (?xprout)
                                                   _PutcharLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __call_ctors (?cppinit)
                                                   __iar_Log (?xlog)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   pad (?xprintflarge_nomb)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000D - 0000000D (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   ?V6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V5                     0000000D        Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   Segment part 141 (?xprintflarge_nomb)
                                                   Segment part 142 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   _Prout (?xprout)
                                                   _PutcharLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   pad (?xprintflarge_nomb)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000E - 0000000E (0x1 bytes), align: 0
  Segment part 7.             Intra module refs:   ?V7
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V6                     0000000E        EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   pad (?xprintflarge_nomb)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 0000000F - 0000000F (0x1 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V7                     0000000F        EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   ceilf (?ceilf)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   pad (?xprintflarge_nomb)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?BANKED_ENTER_XDATA (?BANKED_ENTER_XDATA)
                                                   ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   ?XSTACK_DISP100_8 (?XSTACK_DISP8_RP)
                                                   ?XSTACK_DISP101_8 (?XSTACK_DISP8_RP)
                                                   ?XSTACK_DISP102_8 (?XSTACK_DISP8_RP)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   Segment part 110 (?xprintflarge_nomb)
                                                   Segment part 112 (?xprintflarge_nomb)
                                                   Segment part 133 (?xprintflarge_nomb)
                                                   Segment part 136 (?xprintflarge_nomb)
                                                   Segment part 144 (?xprintflarge_nomb)
                                                   Segment part 148 (?xprintflarge_nomb)
                                                   Segment part 43 (?xlog)
                                                   Segment part 68 (?xprintflarge_nomb)
                                                   Segment part 77 (?xprintflarge_nomb)
                                                   Segment part 8 (?div)
                                                   Segment part 91 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   __dwrite (?__dwrite)
                                                   __exit (?__exit)
                                                   __iar_Log (?xlog)
                                                   __iar_Memchr (?memchr)
                                                   __write (?__write)
                                                   ceilf (?ceilf)
                                                   div (?div)
                                                   floorf (?floorf)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   memset (?memset)
                                                   pad (?xprintflarge_nomb)
                                                   printf (?printf)
                                                   putchar (?putchar)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?delop_0

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006413 - 00006424 (0x12 bytes), align: 0
  Segment part 6.             Intra module refs:   operator delete(void *)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   00006413 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000007FB - 00000800 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)::?relay
                                   000007FB        InputBitStream::delete ~InputBitStream(InputBitStream *) (serf_qt_decompressor)
                                                   OutputBitStream::delete ~OutputBitStream(OutputBitStream *) (serf_qt_compressor)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005FA6 - 00006012 (0x6d bytes), align: 0
  Segment part 6.             Intra module refs:   div::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           div                     00005FA6 
               XSTACK = 00000002 ( 0000000E )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006013 - 0000601E (0xc bytes), align: 0
  Segment part 8.             Intra module refs:   div
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000801 - 00000806 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           div::?relay             00000801        _GenldLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?errno

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000009DD - 000009DE (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Errno             000009DD        __iar_Log (?xlog)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006425 - 00006432 (0xe bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00006425        ?call_main (?cmain)
               calls direct
               ISTACK = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?fabsf

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006093 - 00006106 (0x74 bytes), align: 0
  Segment part 8.             Intra module refs:   fabsf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fabsf                   00006093 
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000807 - 0000080C (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fabsf::?relay           00000807        test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?floorf

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005EAC - 00005F28 (0x7d bytes), align: 0
  Segment part 10.            Intra module refs:   floorf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           floorf                  00005EAC 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F20 - 00000F23 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   __iar_Log (?xlog)
                                                   floorf
                                                   roundf (?roundf)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_bf800000     00000F20 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005CE - 000005D1 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   __Constant_bf800000
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000080D - 00000812 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           floorf::?relay          0000080D        EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_CODE_SUPPORT

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000077 - 00000094 (0x1e bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BCALL_FF               00000077        ?call_main (?cmain)
                                                   ?cstart_call_ctors (?cmain)
                                                   Segment part 10 (?cexit)
           ?BRET_FF                0000007D        ?BANKED_LEAVE_XDATA (?BANKED_LEAVE_XDATA)
                                                   Array<float>::is_valid() const (iar_serf_test)
                                                   Array<float>::length() const (iar_serf_test)
                                                   Array<float>::~Array() (iar_serf_test)
                                                   Array<uint32_t>::Array() (input_bit_stream)
                                                   Array<uint32_t>::begin() const (input_bit_stream)
                                                   Array<uint32_t>::is_valid() const (input_bit_stream)
                                                   Array<uint32_t>::length() const (input_bit_stream)
                                                   Array<uint32_t>::~Array() (input_bit_stream)
                                                   Array<uint8_t>::Array() (serf_qt_compressor)
                                                   Array<uint8_t>::begin() const (input_bit_stream)
                                                   Array<uint8_t>::is_valid() const (input_bit_stream)
                                                   Array<uint8_t>::length() const (input_bit_stream)
                                                   Array<uint8_t>::~Array() (iar_serf_test)
                                                   Double::kNan() (elias_gamma_codec)
                                                   InputBitStream::~InputBitStream() (serf_qt_decompressor)
                                                   OutputBitStream::Refresh() (output_bit_stream)
                                                   OutputBitStream::WriteInt(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::~OutputBitStream() (serf_qt_compressor)
                                                   SerfQtCompressor::compressed_bytes() (serf_qt_compressor)
                                                   SerfQtCompressor::get_compressed_size_in_bits() const (serf_qt_compressor)
                                                   SerfQtDecompressor::~SerfQtDecompressor() (serf_qt_decompressor)
                                                   _Nomemory() (?nomemory)
                                                   __DebugBreak (?__dbg_break)
                                                   __cstart_call_ctors (?cstart_call_ctors)
                                                   __dwrite (?__dwrite)
                                                   __iar_Memchr (?memchr)
                                                   __iar_Strchr (?strchr)
                                                   __sti__routine() (elias_gamma_codec)
                                                   __write (?__write)
                                                   __xdata_GetMemChunk (?xgetmemchunk)
                                                   abort (?abort)
                                                   exit (?exit)
                                                   file_reader_close(file_reader_t *) (file_reader)
                                                   file_reader_get_total_points(file_reader_t *) (file_reader)
                                                   free (iar_serf_test)
                                                   main (iar_serf_test)
                                                   malloc (input_bit_stream)
                                                   memset (?memset)
                                                   operator delete(void *) (?delop_0)
                                                   strlen (?strlen)
           ?BDISPATCH_FF           00000080        Array<float>::Array(Array<float> const &)::?relay (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t)::?relay (serf_qt_decompressor)
                                                   Array<float>::is_valid() const::?relay (iar_serf_test)
                                                   Array<float>::length() const::?relay (iar_serf_test)
                                                   Array<float>::operator[](uint16_t) const::?relay (iar_serf_test)
                                                   Array<float>::~Array()::?relay (iar_serf_test)
                                                   Array<uint32_t>::Array()::?relay (input_bit_stream)
                                                   Array<uint32_t>::Array(uint16_t)::?relay (input_bit_stream)
                                                   Array<uint32_t>::begin() const::?relay (input_bit_stream)
                                                   Array<uint32_t>::is_valid() const::?relay (input_bit_stream)
                                                   Array<uint32_t>::length() const::?relay (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &)::?relay (input_bit_stream)
                                                   Array<uint32_t>::operator[](uint16_t) const::?relay (input_bit_stream)
                                                   Array<uint32_t>::~Array()::?relay (input_bit_stream)
                                                   Array<uint8_t>::Array()::?relay (serf_qt_compressor)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &)::?relay (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t)::?relay (output_bit_stream)
                                                   Array<uint8_t>::begin() const::?relay (input_bit_stream)
                                                   Array<uint8_t>::is_valid() const::?relay (input_bit_stream)
                                                   Array<uint8_t>::length() const::?relay (input_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &)::?relay (serf_qt_compressor)
                                                   Array<uint8_t>::~Array()::?relay (iar_serf_test)
                                                   Double::FloatToLongBits(float)::?relay (serf_qt_compressor)
                                                   Double::LongBitsToFloat(uint32_t)::?relay (serf_qt_decompressor)
                                                   Double::kNan()::?relay (elias_gamma_codec)
                                                   EliasGammaCodec::Decode(InputBitStream *)::?relay (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *)::?relay (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t)::?relay (input_bit_stream)
                                                   InputBitStream::InputBitStream()::?relay (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t)::?relay (input_bit_stream)
                                                   InputBitStream::ReadBit()::?relay (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t)::?relay (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t)::?relay (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &)::?relay (input_bit_stream)
                                                   InputBitStream::delete ~InputBitStream(InputBitStream *)::?relay (serf_qt_decompressor)
                                                   InputBitStream::~InputBitStream()::?relay (serf_qt_decompressor)
                                                   OutputBitStream::Flush()::?relay (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t)::?relay (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t)::?relay (output_bit_stream)
                                                   OutputBitStream::Refresh()::?relay (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t)::?relay (output_bit_stream)
                                                   OutputBitStream::WriteInt(uint32_t, uint32_t)::?relay (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t)::?relay (output_bit_stream)
                                                   OutputBitStream::delete ~OutputBitStream(OutputBitStream *)::?relay (serf_qt_compressor)
                                                   OutputBitStream::new OutputBitStream(uint32_t)::?relay (output_bit_stream)
                                                   OutputBitStream::~OutputBitStream()::?relay (serf_qt_compressor)
                                                   SerfQtCompressor::AddValue(float)::?relay (serf_qt_compressor)
                                                   SerfQtCompressor::Close()::?relay (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float)::?relay (serf_qt_compressor)
                                                   SerfQtCompressor::compressed_bytes()::?relay (serf_qt_compressor)
                                                   SerfQtCompressor::get_compressed_size_in_bits() const::?relay (serf_qt_compressor)
                                                   SerfQtCompressor::~SerfQtCompressor()::?relay (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &)::?relay (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue()::?relay (serf_qt_decompressor)
                                                   SerfQtDecompressor::SerfQtDecompressor()::?relay (serf_qt_decompressor)
                                                   SerfQtDecompressor::~SerfQtDecompressor()::?relay (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long)::?relay (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long)::?relay (serf_qt_compressor)
                                                   _GenldLargeNoMb::?relay (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb::?relay (?xprintflarge_nomb)
                                                   _LitobLargeNoMb::?relay (?xprintflarge_nomb)
                                                   _Nomemory()::?relay (?nomemory)
                                                   _PrintfLargeNoMb::?relay (?xprintflarge_nomb)
                                                   _Prout::?relay (?xprout)
                                                   _PutcharLargeNoMb::?relay (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb::?relay (?xprintflarge_nomb)
                                                   __DebugBreak::?relay (?__dbg_break)
                                                   __call_ctors::?relay (?cppinit)
                                                   __dwrite::?relay (?__dwrite)
                                                   __exit::?relay (?__exit)
                                                   __iar_Dint::?relay (?xdint)
                                                   __iar_Log::?relay (?xlog)
                                                   __iar_Memchr::?relay (?memchr)
                                                   __iar_Strchr::?relay (?strchr)
                                                   __sti__routine()::?relay (elias_gamma_codec)
                                                   __write::?relay (?__write)
                                                   __xdata_GetMemChunk::?relay (?xgetmemchunk)
                                                   __xdata_free::?relay (?xxmemxfree)
                                                   __xdata_malloc::?relay (?xxmemxmalloc)
                                                   _exit::?relay (?cexit)
                                                   abort::?relay (?abort)
                                                   ceilf::?relay (?ceilf)
                                                   div::?relay (?div)
                                                   fabsf::?relay (?fabsf)
                                                   file_reader_close(file_reader_t *)::?relay (file_reader)
                                                   file_reader_get_total_points(file_reader_t *)::?relay (file_reader)
                                                   file_reader_init(file_reader_t *, char const *)::?relay (file_reader)
                                                   file_reader_read_next(file_reader_t *, trajectory_point_t *)::?relay (file_reader)
                                                   floorf::?relay (?floorf)
                                                   free::?relay (iar_serf_test)
                                                   load_test_data(char const *)::?relay (iar_serf_test)
                                                   load_trajectory_data_internal(char const *)::?relay (file_reader)
                                                   log2f::?relay (?log2f)
                                                   malloc::?relay (input_bit_stream)
                                                   memcpy::?relay (?memcpy)
                                                   memset::?relay (?memset)
                                                   operator delete(void *)::?relay (?delop_0)
                                                   operator new(unsigned int)::?relay (?newop_0)
                                                   pad::?relay (?xprintflarge_nomb)
                                                   printf::?relay (?printf)
                                                   putchar::?relay (?putchar)
                                                   roundf::?relay (?roundf)
                                                   scale::?relay (?xprintflarge_nomb)
                                                   strlen::?relay (?strlen)
                                                   test_serf_qt_compression()::?relay (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_EQ_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008A9 - 000008BD (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_EQ_X                 000008A9        InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008BE - 000008D2 (0x15 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GT_X                000008BE        _PrintfLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_GE_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008D3 - 000008F8 (0x26 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_GE_X                000008D3        EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000008F9 - 00000908 (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT                  000008F9        InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GT_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000909 - 00000918 (0x10 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GT_X                00000909        InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_GE_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000919 - 00000937 (0x1f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_GE_X                00000919        InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_TO_FLT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000938 - 0000093A (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT               00000938        EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   __iar_Log (?xlog)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000093B - 0000094F (0x15 bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_TO_FLT
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_TO_FLT_REW           0000093B 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000950 - 00000952 (0x3 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT_REW          00000950 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000953 - 000009AF (0x5d bytes), align: 0
  Segment part 3.             Intra module refs:   ?L_TO_FLT_REW
                                                   ?UL_TO_FLT_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_TO_FLT              00000953        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TO_L

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000009B0 - 000009B9 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?R2345_FLT_TO_UL        000009B0        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009BA - 000009C4 (0xb bytes), align: 0
  Segment part 2.             Intra module refs:   ?R2345_FLT_TO_UL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_UL              000009BA        _LdtobLargeNoMb (?xprintflarge_nomb)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009C5 - 000009CE (0xa bytes), align: 0
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?R2345_FLT_TO_L         000009C5        EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000009CF - 00000A02 (0x34 bytes), align: 0
  Segment part 5.             Intra module refs:   ?R2345_FLT_TO_L
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TO_L               000009CF 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A03 - 00000A0E (0xc bytes), align: 0
  Segment part 6.             Intra module refs:   ?FLT_TO_L
                                                   ?FLT_TO_UL
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A0F - 00000A5D (0x4f bytes), align: 0
  Segment part 7.             Intra module refs:   ?FLT_TO_L
                                                   ?FLT_TO_UL

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A5E - 00000A66 (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_REW      00000A5E        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_GE (?FLT_GE)
                                                   ?FLT_LT (?FLT_LT)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_ZERO_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A67 - 00000A6F (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_ZERO_R1_REW   00000A67        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_GE (?FLT_GE)
                                                   ?FLT_LT (?FLT_LT)
                                                   ?FLT_MUL (?FLT_MUL)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A70 - 00000A72 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_REW       00000A70        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A73 - 00000A83 (0x11 bytes), align: 0
  Segment part 1.             Intra module refs:   ?FLT_TEST_INF_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF           00000A73        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_INF_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A84 - 00000A86 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1_REW    00000A84        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_MUL (?FLT_MUL)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000A87 - 00000A97 (0x11 bytes), align: 0
  Segment part 1.             Intra module refs:   ?FLT_TEST_INF_R1_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_INF_R1        00000A87        ?FLT_DIV (?FLT_DIV)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000A98 - 00000AA6 (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN           00000A98        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_GE (?FLT_GE)
                                                   ?FLT_LT (?FLT_LT)
                                                   ?FLT_MUL (?FLT_MUL)
                                                   ?FLT_SUB (?FLT_ADD)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_TEST_NAN_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000AA7 - 00000AB5 (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_TEST_NAN_R1        00000AA7        ?FLT_ADD (?FLT_ADD)
                                                   ?FLT_DIV (?FLT_DIV)
                                                   ?FLT_GE (?FLT_GE)
                                                   ?FLT_LT (?FLT_LT)
                                                   ?FLT_MUL (?FLT_MUL)
                                                   ?FLT_SUB (?FLT_ADD)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_GE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000AB6 - 00000B04 (0x4f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_GE                 00000AB6        ceilf (?ceilf)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_LT

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B05 - 00000B50 (0x4c bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_LT                 00000B05        _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000B51 - 00000CD0 (0x180 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_MUL                00000B51        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_ADD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000CD1 - 00000CF5 (0x25 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_SUB                00000CD1        SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000CF6 - 00000F0F (0x21a bytes), align: 0
  Segment part 3.             Intra module refs:   ?FLT_SUB
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_ADD                00000CF6        SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   __iar_Log (?xlog)
                                                   ceilf (?ceilf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   roundf (?roundf)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_DIV

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000F10 - 000010F5 (0x1e6 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FLT_DIV                00000F10        SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MUL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000010F6 - 000010F8 (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL                  000010F6        _LdtobLargeNoMb (?xprintflarge_nomb)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000010F9 - 00001175 (0x7d bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_MUL
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MUL_REW              000010F9 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001176 - 000011E4 (0x6f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIV_MOD             00001176        ?L_DIV_MOD (?L_DIV_MOD)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000011E5 - 0000123B (0x57 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_DIV_MOD              0000120F        _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG_R1

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000123C - 0000124C (0x11 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_R1               0000123C        ?L_DIV_MOD (?L_DIV_MOD)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_NEG

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000124D - 0000124F (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_REW              0000124D        ?L_TO_FLT_REW (?L_TO_FLT)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001250 - 00001260 (0x11 bytes), align: 0
  Segment part 1.             Intra module refs:   ?L_NEG_REW
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG                  00001250        ?L_DIV_MOD (?L_DIV_MOD)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001261 - 00001265 (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_SHR                 00001261        ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001266 - 0000127A (0x15 bytes), align: 0
  Segment part 2.             Intra module refs:   ?SL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000127B - 0000127F (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR                 0000127B        InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   fabsf (?fabsf)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001280 - 00001293 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?UL_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001294 - 00001299 (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL                  00001294        InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000129A - 0000129E (0x5 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_REW              0000129A 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000129F - 000012B2 (0x14 bytes), align: 0
  Segment part 2.             Intra module refs:   ?L_SHL
                                                   ?L_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000012B3 - 000012C5 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_X                000012B3        InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_ADD_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000012C6 - 000012D8 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_ADD_TO_X             000012C6        InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SUB_FROM_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000012D9 - 000012EC (0x14 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SUB_FROM_X           000012D9        InputBitStream::Forward(uint32_t) (input_bit_stream)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000012ED - 000012FF (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND                  000012ED        InputBitStream::Peek(uint32_t) (input_bit_stream)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001300 - 00001312 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_X                00001300        ZigZagCodec::Decode(long) (serf_qt_decompressor)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_AND_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001313 - 00001325 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_AND_TO_X             00001313        OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001326 - 00001338 (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR                  00001326        EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_IOR_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001339 - 0000134B (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_IOR_TO_X             00001339        InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_XOR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000134C - 0000135E (0x13 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_XOR                  0000134C        ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000135F - 0000136D (0xf bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_X                0000135F        InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   ceilf (?ceilf)
                                                   fabsf (?fabsf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_MOV_TO_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000136E - 0000137C (0xf bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_MOV_TO_X             0000136E        InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   ceilf (?ceilf)
                                                   floorf (?floorf)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000137D - 00001388 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R2345            0000137D        EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::get_compressed_size_in_bits() const (serf_qt_compressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Log (?xlog)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R2345

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001389 - 00001394 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R2345           00001389        _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __sti__routine() (elias_gamma_codec)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R4567

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001395 - 000013A0 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R4567            00001395        _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R4567

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000013A1 - 000013AC (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R4567           000013A1        _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XLOAD_R0123

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000013AD - 000013B8 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XLOAD_R0123            000013AD        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTORE_R0123

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000013B9 - 000013C4 (0xc bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTORE_R0123           000013B9        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000013C5 - 000013D1 (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   000013C5        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000013D2 - 000013F2 (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   000013D2        ?PUSH_XSTACK8_X (?PUSH_XSTACK8_X)
                                                   div (?div)
                                                   file_reader_read_next(file_reader_t *, trajectory_point_t *) (file_reader)
                                                   load_test_data(char const *) (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000013F3 - 00001433 (0x41 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_DIV_MOD              0000142C        div (?div)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001434 - 0000148C (0x59 bytes), align: 0
  Segment part 1.             Intra module refs:   ?S_DIV_MOD
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             00001434 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000148D - 0000148F (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR                 0000148D        scale (?xprintflarge_nomb)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001490 - 0000149C (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?SS_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000149D - 0000149F (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 0000149D        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   __iar_Dint (?xdint)
                                                   __iar_Log (?xlog)
                                                   fabsf (?fabsf)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000014A0 - 000014AB (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000014AC - 000014AE (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  000014AC        Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<float>::operator[](uint16_t) const (iar_serf_test)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint32_t>::operator[](uint16_t) const (input_bit_stream)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   __iar_Dint (?xdint)
                                                   file_reader_read_next(file_reader_t *, trajectory_point_t *) (file_reader)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000014AF - 000014B1 (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              000014AF 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000014B2 - 000014BE (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000014BF - 000014D4 (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          000014BF        EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   __dwrite (?__dwrite)
                                                   __exit (?__exit)
                                                   __iar_Log (?xlog)
                                                   ceilf (?ceilf)
                                                   div (?div)
                                                   floorf (?floorf)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   pad (?xprintflarge_nomb)
                                                   printf (?printf)
                                                   putchar (?putchar)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000014D5 - 000014EF (0x1b bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        000014D5        Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteInt(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   Segment part 40 (?xlog)
                                                   Segment part 83 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   __dwrite (?__dwrite)
                                                   __write (?__write)
                                                   ceilf (?ceilf)
                                                   div (?div)
                                                   floorf (?floorf)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   pad (?xprintflarge_nomb)
                                                   printf (?printf)
                                                   putchar (?putchar)
                                                   roundf (?roundf)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000014F0 - 0000150A (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     000014F0        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000150B - 00001514 (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         0000150B        EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteInt(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __dwrite (?__dwrite)
                                                   __iar_Log (?xlog)
                                                   div (?div)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   memcpy (?memcpy)
                                                   pad (?xprintflarge_nomb)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8_RP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001515 - 0000151C (0x8 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP100_8       00001515        _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   pad (?xprintflarge_nomb)
                                                   printf (?printf)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000151D - 00001524 (0x8 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP101_8       0000151D        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001525 - 0000152C (0x8 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP102_8       00001525        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   putchar (?putchar)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000152D - 0000152E (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               0000152D        _PutcharLargeNoMb (?xprintflarge_nomb)
                                                   __call_ctors (?cppinit)
                                                   operator new(unsigned int) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000152F - 0000159A (0x6c bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_ENTER_XDATA     0000152F        Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<float>::operator[](uint16_t) const (iar_serf_test)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint32_t>::operator[](uint16_t) const (input_bit_stream)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   Double::FloatToLongBits(float) (serf_qt_compressor)
                                                   Double::LongBitsToFloat(uint32_t) (serf_qt_decompressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::InputBitStream() (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   InputBitStream::delete ~InputBitStream(InputBitStream *) (serf_qt_decompressor)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::delete ~OutputBitStream(OutputBitStream *) (serf_qt_compressor)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtCompressor::~SerfQtCompressor() (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   SerfQtDecompressor::SerfQtDecompressor() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _LitobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   _Prout (?xprout)
                                                   _PutcharLargeNoMb (?xprintflarge_nomb)
                                                   _PutcharsLargeNoMb (?xprintflarge_nomb)
                                                   __call_ctors (?cppinit)
                                                   __exit (?__exit)
                                                   __iar_Dint (?xdint)
                                                   __iar_Log (?xlog)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   div (?div)
                                                   fabsf (?fabsf)
                                                   file_reader_init(file_reader_t *, char const *) (file_reader)
                                                   file_reader_read_next(file_reader_t *, trajectory_point_t *) (file_reader)
                                                   floorf (?floorf)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   memcpy (?memcpy)
                                                   operator new(unsigned int) (?newop_0)
                                                   pad (?xprintflarge_nomb)
                                                   printf (?printf)
                                                   putchar (?putchar)
                                                   roundf (?roundf)
                                                   scale (?xprintflarge_nomb)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?BANKED_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000159B - 000015E0 (0x46 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?BANKED_LEAVE_XDATA     0000159B        Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<float>::operator[](uint16_t) const (iar_serf_test)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint32_t>::operator[](uint16_t) const (input_bit_stream)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   Double::FloatToLongBits(float) (serf_qt_compressor)
                                                   Double::LongBitsToFloat(uint32_t) (serf_qt_decompressor)
                                                   EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::Forward(uint32_t) (input_bit_stream)
                                                   InputBitStream::InputBitStream() (input_bit_stream)
                                                   InputBitStream::Peek(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   InputBitStream::delete ~InputBitStream(InputBitStream *) (serf_qt_decompressor)
                                                   OutputBitStream::Flush() (output_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::OutputBitStream(uint32_t) (output_bit_stream)
                                                   OutputBitStream::Write(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::delete ~OutputBitStream(OutputBitStream *) (serf_qt_compressor)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   Segment part 34 (?xprintflarge_nomb)
                                                   Segment part 40 (?xlog)
                                                   Segment part 84 (?xprintflarge_nomb)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtCompressor::SerfQtCompressor(uint16_t, float) (serf_qt_compressor)
                                                   SerfQtCompressor::~SerfQtCompressor() (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   SerfQtDecompressor::NextValue() (serf_qt_decompressor)
                                                   SerfQtDecompressor::SerfQtDecompressor() (serf_qt_decompressor)
                                                   ZigZagCodec::Decode(long) (serf_qt_decompressor)
                                                   ZigZagCodec::Encode(long) (serf_qt_compressor)
                                                   _Prout (?xprout)
                                                   __call_ctors (?cppinit)
                                                   __iar_Dint (?xdint)
                                                   __xdata_free (?xxmemxfree)
                                                   __xdata_malloc (?xxmemxmalloc)
                                                   ceilf (?ceilf)
                                                   div (?div)
                                                   fabsf (?fabsf)
                                                   file_reader_init(file_reader_t *, char const *) (file_reader)
                                                   file_reader_read_next(file_reader_t *, trajectory_point_t *) (file_reader)
                                                   floorf (?floorf)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   load_trajectory_data_internal(char const *) (file_reader)
                                                   log2f (?log2f)
                                                   memcpy (?memcpy)
                                                   operator new(unsigned int) (?newop_0)
                                                   printf (?printf)
                                                   putchar (?putchar)
                                                   roundf (?roundf)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000015E1 - 000015E4 (0x4 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_FOUR     000015E1        EliasGammaCodec::Decode(InputBitStream *) (elias_gamma_codec)
                                                   EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::ReadInt(uint32_t) (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015E5 - 000015E8 (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      000015E5        Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   log2f (?log2f)
                                                   pad (?xprintflarge_nomb)
                                                   printf (?printf)
                                                   putchar (?putchar)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015E9 - 000015F5 (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_FOUR
                                                   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          000015E9 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK8_X

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000015F6 - 000015F9 (0x4 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_FOUR    000015F6        EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)
                                                   InputBitStream::ReadBit() (input_bit_stream)
                                                   InputBitStream::ReadLong(uint32_t) (input_bit_stream)
                                                   InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteInt(uint32_t, uint32_t) (output_bit_stream)
                                                   OutputBitStream::WriteLong(uint32_t, uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015FA - 000015FD (0x4 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X_TWO     000015FA        Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)
                                                   _PrintfLargeNoMb (?xprintflarge_nomb)
                                                   __write (?__write)
                                                   test_serf_qt_compression() (iar_serf_test)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000015FE - 00001626 (0x29 bytes), align: 0
  Segment part 5.             Intra module refs:   ?PUSH_XSTACK8_X_FOUR
                                                   ?PUSH_XSTACK8_X_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK8_X         000015FE 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001627 - 0000162D (0x7 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SWITCH_DENSE        00001627        roundf (?roundf)
           ?US_SD_CFI_INV_BEGINS   00001627 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000162E - 0000166B (0x3e bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 0
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000166C - 0000166C (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SD_CFI_INV_ENDS     0000166D 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000166D - 00001673 (0x7 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE       0000166D        _PrintfLargeNoMb (?xprintflarge_nomb)
           ?UC_SS_CFI_INV_BEGINS   0000166D 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001674 - 00001695 (0x22 bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE_LEAVE
                                   0000168A        Segment part 0 (?UC_JMP_IF_IN_RANGE)
                                                   Segment part 0 (?UC_JMP_IF_VALUE)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00001696 - 00001696 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SS_CFI_INV_ENDS     00001697 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00001697 - 000016B5 (0x1f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_IN_RANGE     00001697        ?UC_SWITCH_SPARSE_LEAVE (?UC_SWITCH_SPARSE)
           ?UC_JR_CFI_INV_BEGINS   00001697 
           ?UC_JR_CFI_INV_ENDS     000016B6 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000016B6 - 000016CB (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_VALUE        000016B6        ?UC_SWITCH_SPARSE_LEAVE (?UC_SWITCH_SPARSE)
           ?UC_JMP_IF_VALUE_CFI_INV_BEGINS
                                   000016B6 
           ?UC_JMP_IF_VALUE_CFI_INV_ENDS
                                   000016CC 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?log2f

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063C5 - 000063E1 (0x1d bytes), align: 0
  Segment part 6.             Intra module refs:   log2f::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           log2f                   000063C5 
               calls direct, is indirectly called
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000813 - 00000818 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           log2f::?relay           00000813        EliasGammaCodec::Encode(long, OutputBitStream *) (elias_gamma_codec)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006275 - 000062AC (0x38 bytes), align: 0
  Segment part 8.             Intra module refs:   __iar_Memchr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr            00006275 
               is indirectly called
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000819 - 0000081E (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Memchr::?relay    00000819        _PrintfLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000061FB - 00006237 (0x3d bytes), align: 0
  Segment part 6.             Intra module refs:   memcpy::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  000061FB 
               is indirectly called
               XSTACK = 00000002 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000081F - 00000824 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy::?relay          0000081F        Array<float>::Array(Array<float> const &) (serf_qt_decompressor)
                                                   Array<uint32_t>::operator=(Array<uint32_t> const &) (input_bit_stream)
                                                   Array<uint8_t>::Array(Array<uint8_t> const &) (output_bit_stream)
                                                   Array<uint8_t>::operator=(Array<uint8_t> const &) (serf_qt_compressor)
                                                   _GenldLargeNoMb (?xprintflarge_nomb)
                                                   _LdtobLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062E1 - 0000630C (0x2c bytes), align: 0
  Segment part 6.             Intra module refs:   memset::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  000062E1 
               is indirectly called
               XSTACK = 00000002 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000825 - 0000082A (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset::?relay          00000825        Array<float>::Array(uint16_t) (serf_qt_decompressor)
                                                   Array<uint32_t>::Array(uint16_t) (input_bit_stream)
                                                   Array<uint8_t>::Array(uint16_t) (output_bit_stream)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?new

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000009DF - 000009E0 (0x2 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_New_hand          000009DF        operator new(unsigned int) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?newop_0

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000062AD - 000062E0 (0x34 bytes), align: 0
  Segment part 6.             Intra module refs:   operator new(unsigned int)::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int)
                                   000062AD 
               calls direct
               XSTACK = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000082B - 00000830 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int)::?relay
                                   0000082B        OutputBitStream::new OutputBitStream(uint32_t) (output_bit_stream)
                                                   SerfQtDecompressor::SerfQtDecompressor() (serf_qt_decompressor)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?nomemory

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006433 - 00006440 (0xe bytes), align: 0
  Segment part 22.            Intra module refs:   _Nomemory()::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Nomemory()             00006433 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000831 - 00000836 (0x6 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Nomemory()::?relay     00000831        operator new(unsigned int) (?newop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?printf

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000061B1 - 000061FA (0x4a bytes), align: 0
  Segment part 6.             Intra module refs:   printf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           printf                  000061B1 
               calls direct
               XSTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000837 - 0000083C (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           printf::?relay          00000837        InputBitStream::SetBuffer(Array<uint8_t> const &) (input_bit_stream)
                                                   OutputBitStream::GetBuffer(uint32_t) (output_bit_stream)
                                                   SerfQtCompressor::AddValue(float) (serf_qt_compressor)
                                                   SerfQtCompressor::Close() (serf_qt_compressor)
                                                   SerfQtDecompressor::Decompress(Array<uint8_t> const &) (serf_qt_decompressor)
                                                   load_test_data(char const *) (iar_serf_test)
                                                   main (iar_serf_test)
                                                   test_serf_qt_compression() (iar_serf_test)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?putchar

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006107 - 0000615F (0x59 bytes), align: 0
  Segment part 6.             Intra module refs:   putchar::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           putchar                 00006107 
               calls direct
               XSTACK = 00000000 ( 0000000D )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000083D - 00000842 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           putchar::?relay         0000083D        _Prout (?xprout)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?roundf

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005E17 - 00005EAB (0x95 bytes), align: 0
  Segment part 10.            Intra module refs:   roundf::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           roundf                  00005E17 
               calls direct
               XSTACK = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000843 - 00000848 (0x6 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           roundf::?relay          00000843        SerfQtCompressor::AddValue(float) (serf_qt_compressor)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strchr

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000635E - 00006382 (0x25 bytes), align: 0
  Segment part 8.             Intra module refs:   __iar_Strchr::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr            0000635E 
               is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000849 - 0000084E (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Strchr::?relay    00000849        _PrintfLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strlen

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000063A7 - 000063C4 (0x1e bytes), align: 0
  Segment part 6.             Intra module refs:   strlen::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen                  000063A7 
               is indirectly called
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000084F - 00000854 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strlen::?relay          0000084F        _PrintfLargeNoMb (?xprintflarge_nomb)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xdint

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005D14 - 00005E16 (0x103 bytes), align: 0
  Segment part 6.             Intra module refs:   __iar_Dint::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Dint              00005D14 
               XSTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000855 - 0000085A (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Dint::?relay      00000855        ceilf (?ceilf)
                                                   floorf (?floorf)
                                                   roundf (?roundf)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00006238 - 00006274 (0x3d bytes), align: 0
  Segment part 7.             Intra module refs:   __xdata_GetMemChunk::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_GetMemChunk     00006238 
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000009E1 - 000009E2 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   __xdata_GetMemChunk
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000085B - 00000860 (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_GetMemChunk::?relay
                                   0000085B        __xdata_malloc (?xxmemxmalloc)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xlog

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005257 - 0000567B (0x425 bytes), align: 0
  Segment part 38.            Intra module refs:   __iar_Log::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Log               00005257 
               XSTACK = 00000002 ( 0000001C )
               ISTACK = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000567C - 00005683 (0x8 bytes), align: 0
  Segment part 40.            Intra module refs:   __iar_Log
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005684 - 00005695 (0x12 bytes), align: 0
  Segment part 43.            Intra module refs:   __iar_Log
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F24 - 00000F27 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3f3504f3     00000F24 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005D2 - 000005D5 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   __Constant_3f3504f3
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F28 - 00000F2B (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e990215     00000F28 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005D6 - 000005D9 (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   __Constant_3e990215
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F2C - 00000F2F (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3eccae11     00000F2C 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005DA - 000005DD (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   __Constant_3eccae11
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F30 - 00000F33 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3f2aaac0     00000F30 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005DE - 000005E1 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   __Constant_3f2aaac0
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F34 - 00000F37 (0x4 bytes), align: 0
  Segment part 20.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_33fbe8e8     00000F34 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005E2 - 000005E5 (0x4 bytes), align: 0
  Segment part 21.            Intra module refs:   __Constant_33fbe8e8
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F38 - 00000F3B (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3f317216     00000F38 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005E6 - 000005E9 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_3f317216
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F3C - 00000F3F (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3ede5bd8     00000F3C 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005EA - 000005ED (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   __Constant_3ede5bd8
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F40 - 00000F43 (0x4 bytes), align: 0
  Segment part 26.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_32a93728     00000F40 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005EE - 000005F1 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   __Constant_32a93728
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F44 - 00000F47 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_33a13ef4     00000F44 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005F2 - 000005F5 (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   __Constant_33a13ef4
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F48 - 00000F4B (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3ede5bd9     00000F48 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005F6 - 000005F9 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   __Constant_3ede5bd9
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F4C - 00000F4F (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3e9a2098     00000F4C 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005FA - 000005FD (0x4 bytes), align: 0
  Segment part 33.            Intra module refs:   __Constant_3e9a2098
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F50 - 00000F53 (0x4 bytes), align: 0
  Segment part 34.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_3fb8aa3b     00000F50 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000005FE - 00000601 (0x4 bytes), align: 0
  Segment part 35.            Intra module refs:   __Constant_3fb8aa3b
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F54 - 00000F57 (0x4 bytes), align: 0
  Segment part 36.            Intra module refs:   __iar_Log
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_32a57060     00000F54 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000602 - 00000605 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   __Constant_32a57060
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000861 - 00000866 (0x6 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __iar_Log::?relay       00000861        log2f (?log2f)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprintflarge_nomb

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000016CE - 00001F5E (0x891 bytes), align: 0
  Segment part 32.            Intra module refs:   _PrintfLargeNoMb::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfLargeNoMb        000016CE 
               calls direct
               XSTACK = 00000004 ( 00000070 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001F5F - 00001F63 (0x5 bytes), align: 0
  Segment part 34.            Intra module refs:   _PrintfLargeNoMb
                                                   _PutcharLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001F64 - 00001F6E (0xb bytes), align: 0
  Segment part 35.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001F6F - 00001F8C (0x1e bytes), align: 0
  Segment part 36.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001F8D - 00001F94 (0x8 bytes), align: 0
  Segment part 37.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001F95 - 00001F9A (0x6 bytes), align: 0
  Segment part 38.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001F9B - 00001FA0 (0x6 bytes), align: 0
  Segment part 39.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FA1 - 00001FAC (0xc bytes), align: 0
  Segment part 40.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FAD - 00001FB2 (0x6 bytes), align: 0
  Segment part 41.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FB3 - 00001FB8 (0x6 bytes), align: 0
  Segment part 42.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FB9 - 00001FC0 (0x8 bytes), align: 0
  Segment part 43.            Intra module refs:   Segment part 41
                                                   Segment part 42
                                                   Segment part 45
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FC1 - 00001FCB (0xb bytes), align: 0
  Segment part 44.            Intra module refs:   Segment part 38
                                                   Segment part 43
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FCC - 00001FD1 (0x6 bytes), align: 0
  Segment part 45.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FD2 - 00001FDC (0xb bytes), align: 0
  Segment part 46.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FDD - 00001FE7 (0xb bytes), align: 0
  Segment part 47.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FE8 - 00001FF2 (0xb bytes), align: 0
  Segment part 48.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FF3 - 00001FFE (0xc bytes), align: 0
  Segment part 49.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00001FFF - 00002002 (0x4 bytes), align: 0
  Segment part 50.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002003 - 0000200F (0xd bytes), align: 0
  Segment part 51.            Intra module refs:   Segment part 50
                                                   Segment part 54
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002010 - 00002013 (0x4 bytes), align: 0
  Segment part 52.            Intra module refs:   Segment part 51
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002014 - 00002019 (0x6 bytes), align: 0
  Segment part 53.            Intra module refs:   Segment part 107
                                                   Segment part 48
                                                   Segment part 52
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000201A - 00002022 (0x9 bytes), align: 0
  Segment part 54.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002023 - 0000202E (0xc bytes), align: 0
  Segment part 55.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000202F - 00002040 (0x12 bytes), align: 0
  Segment part 56.            Intra module refs:   Segment part 51
                                                   Segment part 55
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002041 - 00002044 (0x4 bytes), align: 0
  Segment part 57.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002045 - 00002052 (0xe bytes), align: 0
  Segment part 58.            Intra module refs:   Segment part 57
                                                   Segment part 59
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002053 - 0000205B (0x9 bytes), align: 0
  Segment part 59.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000205C - 0000206E (0x13 bytes), align: 0
  Segment part 60.            Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000206F - 00002077 (0x9 bytes), align: 0
  Segment part 61.            Intra module refs:   Segment part 58
                                                   Segment part 60
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002078 - 000020ED (0x76 bytes), align: 0
  Segment part 62.            Intra module refs:   pad::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           pad                     00002078 
               calls direct
               XSTACK = 0000006E ( 00000015 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000020EE - 000023FE (0x311 bytes), align: 0
  Segment part 64.            Intra module refs:   _LitobLargeNoMb::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobLargeNoMb         000020EE 
               XSTACK = 0000006C ( 00000023 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000023FF - 000023FF (0x1 bytes), align: 0
  Segment part 66.            Intra module refs:   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002400 - 00002406 (0x7 bytes), align: 0
  Segment part 67.            Intra module refs:   Segment part 135
                                                   Segment part 66
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002407 - 0000240C (0x6 bytes), align: 0
  Segment part 68.            Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000240D - 00002410 (0x4 bytes), align: 0
  Segment part 69.            Intra module refs:   Segment part 68
                                                   _GenldLargeNoMb
                                                   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002411 - 00002414 (0x4 bytes), align: 0
  Segment part 70.            Intra module refs:   Segment part 135
                                                   Segment part 139
                                                   Segment part 144
                                                   Segment part 39
                                                   Segment part 46
                                                   Segment part 69
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002415 - 0000241E (0xa bytes), align: 0
  Segment part 71.            Intra module refs:   Segment part 130
                                                   Segment part 134
                                                   Segment part 137
                                                   Segment part 70
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000241F - 00002426 (0x8 bytes), align: 0
  Segment part 72.            Intra module refs:   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002427 - 0000242B (0x5 bytes), align: 0
  Segment part 73.            Intra module refs:   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000242C - 0000243C (0x11 bytes), align: 0
  Segment part 74.            Intra module refs:   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000243D - 00002441 (0x5 bytes), align: 0
  Segment part 75.            Intra module refs:   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002442 - 00002445 (0x4 bytes), align: 0
  Segment part 76.            Intra module refs:   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002446 - 0000244E (0x9 bytes), align: 0
  Segment part 77.            Intra module refs:   Segment part 76
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000244F - 000024CF (0x81 bytes), align: 0
  Segment part 78.            Intra module refs:   scale::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           scale                   0000244F 
               XSTACK = 00000052 ( 00000014 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000024D0 - 000024D9 (0xa bytes), align: 0
  Segment part 80.            Intra module refs:   _PrintfLargeNoMb
                                                   scale
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000024DA - 000029BF (0x4e6 bytes), align: 0
  Segment part 81.            Intra module refs:   _LdtobLargeNoMb::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           _LdtobLargeNoMb         000024DA 
               calls direct
               XSTACK = 0000006C ( 00000054 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029C0 - 000029C2 (0x3 bytes), align: 0
  Segment part 83.            Intra module refs:   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
                                                   pad
                                                   scale
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029C3 - 000029C7 (0x5 bytes), align: 0
  Segment part 84.            Intra module refs:   Segment part 83
                                                   _PutcharsLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029C8 - 000029D0 (0x9 bytes), align: 0
  Segment part 85.            Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029D1 - 000029D2 (0x2 bytes), align: 0
  Segment part 86.            Intra module refs:   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029D3 - 000029D7 (0x5 bytes), align: 0
  Segment part 87.            Intra module refs:   Segment part 86
                                                   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029D8 - 000029D9 (0x2 bytes), align: 0
  Segment part 88.            Intra module refs:   Segment part 87
                                                   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029DA - 000029E1 (0x8 bytes), align: 0
  Segment part 89.            Intra module refs:   Segment part 88
                                                   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
                                                   _PutcharsLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029E2 - 000029E6 (0x5 bytes), align: 0
  Segment part 90.            Intra module refs:   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029E7 - 000029F5 (0xf bytes), align: 0
  Segment part 91.            Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029F6 - 000029FE (0x9 bytes), align: 0
  Segment part 92.            Intra module refs:   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000029FF - 00002A02 (0x4 bytes), align: 0
  Segment part 93.            Intra module refs:   _LdtobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A03 - 00002A04 (0x2 bytes), align: 0
  Segment part 94.            Intra module refs:   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A05 - 00002A09 (0x5 bytes), align: 0
  Segment part 95.            Intra module refs:   Segment part 94
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
                                                   _PutcharLargeNoMb
                                                   scale
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A0A - 00002A0E (0x5 bytes), align: 0
  Segment part 96.            Intra module refs:   Segment part 124
                                                   Segment part 37
                                                   Segment part 95
                                                   _GenldLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A0F - 00002A18 (0xa bytes), align: 0
  Segment part 97.            Intra module refs:   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A19 - 00002A1E (0x6 bytes), align: 0
  Segment part 98.            Intra module refs:   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A1F - 00002A22 (0x4 bytes), align: 0
  Segment part 99.            Intra module refs:   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A23 - 00002A23 (0x1 bytes), align: 0
  Segment part 100.           Intra module refs:   Segment part 148
                                                   Segment part 99
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A24 - 00002A2B (0x8 bytes), align: 0
  Segment part 101.           Intra module refs:   Segment part 100
                                                   Segment part 46
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A2C - 00002A2C (0x1 bytes), align: 0
  Segment part 102.           Intra module refs:   _LdtobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A2D - 00002A2E (0x2 bytes), align: 0
  Segment part 103.           Intra module refs:   Segment part 102
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A2F - 00002A2F (0x1 bytes), align: 0
  Segment part 104.           Intra module refs:   Segment part 103
                                                   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A30 - 00002A35 (0x6 bytes), align: 0
  Segment part 105.           Intra module refs:   Segment part 104
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A36 - 00002A3B (0x6 bytes), align: 0
  Segment part 106.           Intra module refs:   _GenldLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A3C - 00002A3F (0x4 bytes), align: 0
  Segment part 107.           Intra module refs:   Segment part 106
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A40 - 00002A4A (0xb bytes), align: 0
  Segment part 108.           Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A4B - 00002A50 (0x6 bytes), align: 0
  Segment part 109.           Intra module refs:   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A51 - 00002A5E (0xe bytes), align: 0
  Segment part 110.           Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A5F - 00002A5F (0x1 bytes), align: 0
  Segment part 111.           Intra module refs:   Segment part 110
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A60 - 00002A65 (0x6 bytes), align: 0
  Segment part 112.           Intra module refs:   Segment part 111
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A66 - 00002A6B (0x6 bytes), align: 0
  Segment part 113.           Intra module refs:   Segment part 112
                                                   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
                                                   _LitobLargeNoMb
                                                   _PrintfLargeNoMb
                                                   _PutcharLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002A6C - 00002F5D (0x4f2 bytes), align: 0
  Segment part 114.           Intra module refs:   _GenldLargeNoMb::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           _GenldLargeNoMb         00002A6C 
               calls direct
               XSTACK = 00000054 ( 0000002F )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002F5E - 00002F63 (0x6 bytes), align: 0
  Segment part 116.           Intra module refs:   Segment part 74
                                                   _GenldLargeNoMb
                                                   _PutcharsLargeNoMb
                                                   pad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002F64 - 00002F70 (0xd bytes), align: 0
  Segment part 117.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002F71 - 00002F7F (0xf bytes), align: 0
  Segment part 118.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002F80 - 00002F85 (0x6 bytes), align: 0
  Segment part 119.           Intra module refs:   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002F86 - 00002F90 (0xb bytes), align: 0
  Segment part 120.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002F91 - 00002F98 (0x8 bytes), align: 0
  Segment part 121.           Intra module refs:   Segment part 120
                                                   _LdtobLargeNoMb
                                                   pad
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002F99 - 00002F9C (0x4 bytes), align: 0
  Segment part 122.           Intra module refs:   _GenldLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002F9D - 00002FA0 (0x4 bytes), align: 0
  Segment part 123.           Intra module refs:   Segment part 122
                                                   Segment part 131
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FA1 - 00002FA8 (0x8 bytes), align: 0
  Segment part 124.           Intra module refs:   Segment part 123
                                                   Segment part 127
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FA9 - 00002FAE (0x6 bytes), align: 0
  Segment part 125.           Intra module refs:   _GenldLargeNoMb
                                                   _PrintfLargeNoMb
                                                   _PutcharsLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FAF - 00002FB2 (0x4 bytes), align: 0
  Segment part 126.           Intra module refs:   _GenldLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FB3 - 00002FB7 (0x5 bytes), align: 0
  Segment part 127.           Intra module refs:   Segment part 126
                                                   Segment part 128
                                                   Segment part 138
                                                   Segment part 47
                                                   Segment part 72
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FB8 - 00002FC0 (0x9 bytes), align: 0
  Segment part 128.           Intra module refs:   _GenldLargeNoMb
                                                   _LdtobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FC1 - 00002FC4 (0x4 bytes), align: 0
  Segment part 129.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FC5 - 00002FD1 (0xd bytes), align: 0
  Segment part 130.           Intra module refs:   Segment part 129
                                                   Segment part 147
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FD2 - 00002FD9 (0x8 bytes), align: 0
  Segment part 131.           Intra module refs:   _GenldLargeNoMb
                                                   _PrintfLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FDA - 00002FDF (0x6 bytes), align: 0
  Segment part 132.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FE0 - 00002FEB (0xc bytes), align: 0
  Segment part 133.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FEC - 00002FF3 (0x8 bytes), align: 0
  Segment part 134.           Intra module refs:   Segment part 133
                                                   Segment part 73
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FF4 - 00002FFA (0x7 bytes), align: 0
  Segment part 135.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00002FFB - 00003006 (0xc bytes), align: 0
  Segment part 136.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003007 - 0000300E (0x8 bytes), align: 0
  Segment part 137.           Intra module refs:   Segment part 132
                                                   Segment part 136
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000300F - 00003018 (0xa bytes), align: 0
  Segment part 138.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003019 - 0000301E (0x6 bytes), align: 0
  Segment part 139.           Intra module refs:   _GenldLargeNoMb
                                                   _LitobLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000301F - 00003023 (0x5 bytes), align: 0
  Segment part 140.           Intra module refs:   _GenldLargeNoMb
                                                   _PrintfLargeNoMb
                                                   _PutcharLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003024 - 0000302B (0x8 bytes), align: 0
  Segment part 141.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000302C - 00003034 (0x9 bytes), align: 0
  Segment part 142.           Intra module refs:   Segment part 141
                                                   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003035 - 0000303C (0x8 bytes), align: 0
  Segment part 143.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000303D - 0000304E (0x12 bytes), align: 0
  Segment part 144.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000304F - 00003057 (0x9 bytes), align: 0
  Segment part 145.           Intra module refs:   Segment part 144
                                                   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003058 - 00003063 (0xc bytes), align: 0
  Segment part 146.           Intra module refs:   Segment part 144
                                                   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003064 - 0000306E (0xb bytes), align: 0
  Segment part 147.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000306F - 00003077 (0x9 bytes), align: 0
  Segment part 148.           Intra module refs:   Segment part 147
                                                   Segment part 151
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003078 - 00003080 (0x9 bytes), align: 0
  Segment part 149.           Intra module refs:   Segment part 140
                                                   Segment part 148
                                                   Segment part 93
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003081 - 00003081 (0x1 bytes), align: 0
  Segment part 150.           Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003082 - 00003084 (0x3 bytes), align: 0
  Segment part 151.           Intra module refs:   Segment part 150
                                                   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003085 - 00003094 (0x10 bytes), align: 0
  Segment part 152.           Intra module refs:   Segment part 151
                                                   _GenldLargeNoMb
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00003095 - 000030E7 (0x53 bytes), align: 0
  Segment part 153.           Intra module refs:   _PutcharLargeNoMb::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharLargeNoMb       00003095 
               XSTACK = 0000006C ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000030E8 - 00003139 (0x52 bytes), align: 0
  Segment part 155.           Intra module refs:   _PutcharsLargeNoMb::?relay
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsLargeNoMb      000030E8 
               calls direct
               XSTACK = 00000070 ( 00000010 )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000313A - 00003144 (0xb bytes), align: 0
  Segment part 157.           Intra module refs:   Segment part 119
                                                   _PutcharsLargeNoMb
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000606 - 0000060C (0x7 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000060D - 00000610 (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000611 - 00000614 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000615 - 00000618 (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000619 - 0000061C (0x4 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000061D - 0000061E (0x2 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000061F - 00000622 (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   __Constant_ffff
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000623 - 00000626 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   __Constant_7597
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000627 - 0000062A (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   __Constant_186a0
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000062B - 0000062E (0x4 bytes), align: 0
  Segment part 29.            Intra module refs:   __Constant_a
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000062F - 00000632 (0x4 bytes), align: 0
  Segment part 31.            Intra module refs:   __Constant_4cbebc20
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000867 - 0000086C (0x6 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _PrintfLargeNoMb::?relay
                                   00000867        printf (?printf)
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000086D - 00000872 (0x6 bytes), align: 0
  Segment part 63.            Intra module refs:   _PrintfLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           pad::?relay             0000086D 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000873 - 00000878 (0x6 bytes), align: 0
  Segment part 65.            Intra module refs:   _PrintfLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _LitobLargeNoMb::?relay
                                   00000873 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000879 - 0000087E (0x6 bytes), align: 0
  Segment part 79.            Intra module refs:   _LdtobLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           scale::?relay           00000879 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000087F - 00000884 (0x6 bytes), align: 0
  Segment part 82.            Intra module refs:   _PrintfLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _LdtobLargeNoMb::?relay
                                   0000087F 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000885 - 0000088A (0x6 bytes), align: 0
  Segment part 115.           Intra module refs:   _LdtobLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _GenldLargeNoMb::?relay
                                   00000885 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000088B - 00000890 (0x6 bytes), align: 0
  Segment part 154.           Intra module refs:   _PrintfLargeNoMb
                                                   _PutcharsLargeNoMb
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharLargeNoMb::?relay
                                   0000088B 
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000891 - 00000896 (0x6 bytes), align: 0
  Segment part 156.           Intra module refs:   _PrintfLargeNoMb
                                                   pad
           LOCAL                   ADDRESS         
           =====                   =======         
           _PutcharsLargeNoMb::?relay
                                   00000891 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F58 - 00000F5E (0x7 bytes), align: 0
  Segment part 6.             Intra module refs:   _PrintfLargeNoMb
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F5F - 00000F62 (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F63 - 00000F66 (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F67 - 00000F6A (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F6B - 00000F6E (0x4 bytes), align: 0
  Segment part 14.            Intra module refs:   _LdtobLargeNoMb
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F6F - 00000F70 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   _GenldLargeNoMb
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F71 - 00000F74 (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   _PrintfLargeNoMb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffff         00000F71 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F75 - 00000F78 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   _LdtobLargeNoMb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_7597         00000F75 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F79 - 00000F7C (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   _LdtobLargeNoMb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_186a0        00000F79 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F7D - 00000F80 (0x4 bytes), align: 0
  Segment part 28.            Intra module refs:   _LdtobLargeNoMb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_a            00000F7D 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000F81 - 00000F84 (0x4 bytes), align: 0
  Segment part 30.            Intra module refs:   _LdtobLargeNoMb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_4cbebc20     00000F81 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xprout

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 0000630D - 00006337 (0x2b bytes), align: 0
  Segment part 6.             Intra module refs:   _Prout::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Prout                  0000630D 
               calls direct
               XSTACK = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 00000897 - 0000089C (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Prout::?relay          00000897        printf (?printf)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005BD4 - 00005D0B (0x138 bytes), align: 0
  Segment part 6.             Intra module refs:   __xdata_free::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_free            00005BD4 
               XSTACK = 0000000A ( 0000000E )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005D0C - 00005D13 (0x8 bytes), align: 0
  Segment part 8.             Intra module refs:   __xdata_free
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 0000089D - 000008A2 (0x6 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_free::?relay    0000089D        __xdata_malloc (?xxmemxmalloc)
                                                   free (iar_serf_test)
                                                   operator delete(void *) (?delop_0)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000009E3 - 000009E6 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   __xdata_malloc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_Aldata          000009E3        __xdata_free (?xxmemxfree)
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 000058A5 - 00005A17 (0x173 bytes), align: 0
  Segment part 8.             Intra module refs:   __xdata_malloc::?relay
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_malloc          000058A5 
               calls direct
               XSTACK = 0000000A ( 0000000F )
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A18 - 00005A20 (0x9 bytes), align: 0
  Segment part 10.            Intra module refs:   __xdata_malloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A21 - 00005A24 (0x4 bytes), align: 0
  Segment part 11.            Intra module refs:   __xdata_malloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A25 - 00005A2A (0x6 bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 11
                                                   __xdata_malloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A2B - 00005A2E (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   __xdata_malloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A2F - 00005A34 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   Segment part 12
                                                   Segment part 13
                                                   __xdata_malloc
    -------------------------------------------------------------------------
<BANKED_CODE> 1 (was BANKED_CODE)
  Relative segment, address: CODE 00005A35 - 00005A3C (0x8 bytes), align: 0
  Segment part 15.            Intra module refs:   __xdata_malloc
    -------------------------------------------------------------------------
BANK_RELAYS
  Relative segment, address: CODE 000008A3 - 000008A8 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __xdata_malloc::?relay
                                   000008A3        malloc (input_bit_stream)
                                                   operator new(unsigned int) (?newop_0)




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000002           3   com    0
CSTART               CODE          00000003 - 00000094          92   rel    0
BIT_ID               CODE               00000095                     dse    0
BDATA_ID             CODE               00000095                     dse    0
DATA_ID              CODE               00000095                     dse    0
PDATA_ID             CODE               00000095                     dse    0
IDATA_ID             CODE               00000095                     dse    0
IXDATA_ID            CODE               00000095                     dse    0
XDATA_ID             CODE          00000095 - 00000632         59E   rel    0
BANK_RELAYS          CODE          00000633 - 000008A8         276   rel    0
RCODE                CODE          000008A9 - 000016CB         E23   rel    0
DIFUNCT              CODE          000016CC - 000016CD           2   rel    0
<BANKED_CODE> 1      CODE          000016CE - 00006443        4D76   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
XSTACK               XDATA         00000001 - 000001FF         1FF   rel    0
XDATA_Z              XDATA         00000200 - 000009E6         7E7   rel    0
XDATA_I              XDATA         000009E7 - 00000F84         59E   rel    0
XDATA_HEAP           XDATA         00000F85 - 00001083          FF   dse    0
ISTACK               IDATA         000000C0 - 000000FF          40   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 25 668 bytes of CODE  memory
     18 bytes of DATA  memory
  4 227 bytes of XDATA memory
     64 bytes of IDATA memory
      8 bits  of BIT   memory

Errors: none
Warnings: none

